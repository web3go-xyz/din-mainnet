// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// BandScorer is an autogenerated mock type for the BandScorer type
type BandScorer struct {
	mock.Mock
}

// Bucket provides a mock function with given fields: score
func (_m *BandScorer) Bucket(score float64) string {
	ret := _m.Called(score)

	var r0 string
	if rf, ok := ret.Get(0).(func(float64) string); ok {
		r0 = rf(score)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Parse provides a mock function with given fields: str
func (_m *BandScorer) Parse(str string) error {
	ret := _m.Called(str)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(str)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Reset provides a mock function with given fields:
func (_m *BandScorer) Reset() {
	_m.Called()
}

type mockConstructorTestingTNewBandScorer interface {
	mock.TestingT
	Cleanup(func())
}

// NewBandScorer creates a new instance of BandScorer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBandScorer(t mockConstructorTestingTNewBandScorer) *BandScorer {
	mock := &BandScorer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
