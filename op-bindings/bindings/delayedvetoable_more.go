// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const DelayedVetoableStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_target\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_address\"},{\"astId\":1001,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_vetoer\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_address\"},{\"astId\":1002,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_initiator\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_address\"},{\"astId\":1003,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_queuedAt\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_mapping(t_bytes32,t_uint256)\"},{\"astId\":1004,\"contract\":\"src/L1/DelayedVetoable.sol:DelayedVetoable\",\"label\":\"_delay\",\"offset\":0,\"slot\":\"4\",\"type\":\"t_uint256\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_mapping(t_bytes32,t_uint256)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e uint256)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_uint256\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var DelayedVetoableStorageLayout = new(solc.StorageLayout)

var DelayedVetoableDeployedBin = "0x60806040526004361061005e5760003560e01c80636a42b8f8116100435780636a42b8f8146100da578063d4b83992146100fd578063d8bff440146101125761006d565b806354fd4d50146100755780635c39fcc1146100a05761006d565b3661006d5761006b610127565b005b61006b610127565b34801561008157600080fd5b5061008a6103fd565b6040516100979190610692565b60405180910390f35b3480156100ac57600080fd5b506100b56104a0565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610097565b3480156100e657600080fd5b506100ef6104cf565b604051908152602001610097565b34801561010957600080fd5b506100b56104dd565b34801561011e57600080fd5b506100b5610501565b600080366040516101399291906106e3565b60405190819003902060025490915073ffffffffffffffffffffffffffffffffffffffff16331480156101785750600081815260036020526040902054155b156101cb576000818152600360205260408082204290555182917f87a332a414acbc7da074543639ce7ae02ff1ea72e88379da9f261b080beb5a13916101c0919036906106f3565b60405180910390a250565b60015473ffffffffffffffffffffffffffffffffffffffff16331480156101ff575060008181526003602052604090205415155b80156102265750600454600082815260036020526040902054610222919061076f565b4211155b1561026e576000818152600360205260408082208290555182917fbede6852c1d97d93ff557f676de76670cd0dec861e7fe8beb13aa0ba2b0ab040916101c0919036906106f3565b60008181526003602052604081205490036102db576002546040517f295a81c100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015233602482015260440160405180910390fd5b60045460008281526003602052604090205442916102f89161076f565b1015610330576040517f43dc986d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600360205260408082208290555182917f4c109d85bcd0bb5c735b4be850953d652afe4cd9aa2e0b1426a65a4dcb2e122991610373919036906106f3565b60405180910390a26000805460405173ffffffffffffffffffffffffffffffffffffffff909116906103a890839036906106e3565b6000604051808303816000865af19150503d80600081146103e5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ea565b606091505b50509050806103f8573d6000fd5b3d6000f35b60606104287f0000000000000000000000000000000000000000000000000000000000000000610525565b6104517f0000000000000000000000000000000000000000000000000000000000000000610525565b61047a7f0000000000000000000000000000000000000000000000000000000000000000610525565b60405160200161048c93929190610787565b604051602081830303815290604052905090565b6000336104c4575060025473ffffffffffffffffffffffffffffffffffffffff1690565b6104cc610127565b90565b6000336104c4575060045490565b6000336104c4575060005473ffffffffffffffffffffffffffffffffffffffff1690565b6000336104c4575060015473ffffffffffffffffffffffffffffffffffffffff1690565b60608160000361056857505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610592578061057c816107fd565b915061058b9050600a83610864565b915061056c565b60008167ffffffffffffffff8111156105ad576105ad610878565b6040519080825280601f01601f1916602001820160405280156105d7576020820181803683370190505b5090505b841561065a576105ec6001836108a7565b91506105f9600a866108be565b61060490603061076f565b60f81b818381518110610619576106196108d2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610653600a86610864565b94506105db565b949350505050565b60005b8381101561067d578181015183820152602001610665565b8381111561068c576000848401525b50505050565b60208152600082518060208401526106b1816040850160208701610662565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561078257610782610740565b500190565b60008451610799818460208901610662565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516107d5816001850160208a01610662565b600192019182015283516107f0816002840160208801610662565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361082e5761082e610740565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261087357610873610835565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156108b9576108b9610740565b500390565b6000826108cd576108cd610835565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(DelayedVetoableStorageLayoutJSON), DelayedVetoableStorageLayout); err != nil {
		panic(err)
	}

	layouts["DelayedVetoable"] = DelayedVetoableStorageLayout
	deployedBytecodes["DelayedVetoable"] = DelayedVetoableDeployedBin
}
