{
    "methods": {
        "passMessageToL1": {
            "stateMutability": "nonpayable",
            "code": "function passMessageToL1(bytes _message) external nonpayable",
            "inputs": {
                "_message": {
                    "type": "bytes",
                    "description": "Message to pass to L1."
                }
            },
            "outputs": {},
            "notice": "Passes a message to L1."
        },
        "sentMessages": {
            "stateMutability": "view",
            "code": "function sentMessages(bytes32) external view returns (bool)",
            "inputs": {
                "_0": {
                    "type": "bytes32"
                }
            },
            "outputs": {
                "_0": {
                    "type": "bool"
                }
            }
        }
    },
    "events": {
        "L2ToL1Message": {
            "code": "event L2ToL1Message(uint256 _nonce, address _sender, bytes _data)",
            "inputs": {
                "_nonce": {
                    "type": "uint256",
                    "indexed": false
                },
                "_sender": {
                    "type": "address",
                    "indexed": false
                },
                "_data": {
                    "type": "bytes",
                    "indexed": false
                }
            }
        }
    },
    "errors": {},
    "title": "OVM_L2ToL1MessagePasser",
    "details": "The L2 to L1 Message Passer is a utility contract which facilitate an L1 proof of the of a message on L2. The L1 Cross Domain Messenger performs this proof in its _verifyStorageProof function, which verifies the existence of the transaction hash in this contract's `sentMessages` mapping.",
    "name": "OVM_L2ToL1MessagePasser"
}