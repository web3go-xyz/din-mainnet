{
    "methods": {
        "finalOwner": {
            "stateMutability": "view",
            "code": "function finalOwner() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address"
                }
            }
        },
        "getNamedAddresses": {
            "stateMutability": "view",
            "code": "function getNamedAddresses() external view returns (struct AddressDictator.NamedAddress[])",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "AddressDictator.NamedAddress[]"
                }
            },
            "notice": "Returns the full namedAddresses array."
        },
        "manager": {
            "stateMutability": "view",
            "code": "function manager() external view returns (contract Lib_AddressManager)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "contract Lib_AddressManager"
                }
            }
        },
        "returnOwnership": {
            "stateMutability": "nonpayable",
            "code": "function returnOwnership() external nonpayable",
            "inputs": {},
            "outputs": {},
            "notice": "Transfers ownership of this contract to the finalOwner. Only callable by the Final Owner, which is intended to be our multisig. This function shouldn't be necessary, but it gives a sense of reassurance that we can recover if something really surprising goes wrong."
        },
        "setAddresses": {
            "stateMutability": "nonpayable",
            "code": "function setAddresses() external nonpayable",
            "inputs": {},
            "outputs": {},
            "notice": "Called to finalize the transfer, this function is callable by anyone, but will only result in an upgrade if this contract is the owner Address Manager."
        }
    },
    "events": {},
    "errors": {},
    "title": "AddressDictator",
    "details": "The AddressDictator (glory to Arstotzka) is a contract that allows us to safely manipulate      many different addresses in the AddressManager without transferring ownership of the      AddressManager to a hot wallet or hardware wallet.",
    "name": "AddressDictator"
}