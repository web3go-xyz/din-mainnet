{
    "methods": {
        "depositERC20": {
            "stateMutability": "nonpayable",
            "code": "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _l2Gas, bytes _data) external nonpayable",
            "inputs": {
                "_l1Token": {
                    "type": "address",
                    "description": "Address of the L1 ERC20 we are depositing"
                },
                "_l2Token": {
                    "type": "address",
                    "description": "Address of the L1 respective L2 ERC20"
                },
                "_amount": {
                    "type": "uint256",
                    "description": "Amount of the ERC20 to deposit"
                },
                "_l2Gas": {
                    "type": "uint32",
                    "description": "Gas limit required to complete the deposit on L2."
                },
                "_data": {
                    "type": "bytes",
                    "description": "Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content."
                }
            },
            "outputs": {},
            "details": "deposit an amount of the ERC20 to the caller's balance on L2."
        },
        "depositERC20To": {
            "stateMutability": "nonpayable",
            "code": "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _l2Gas, bytes _data) external nonpayable",
            "inputs": {
                "_l1Token": {
                    "type": "address",
                    "description": "Address of the L1 ERC20 we are depositing"
                },
                "_l2Token": {
                    "type": "address",
                    "description": "Address of the L1 respective L2 ERC20"
                },
                "_to": {
                    "type": "address",
                    "description": "L2 address to credit the withdrawal to."
                },
                "_amount": {
                    "type": "uint256",
                    "description": "Amount of the ERC20 to deposit."
                },
                "_l2Gas": {
                    "type": "uint32",
                    "description": "Gas limit required to complete the deposit on L2."
                },
                "_data": {
                    "type": "bytes",
                    "description": "Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content."
                }
            },
            "outputs": {},
            "details": "deposit an amount of ERC20 to a recipient's balance on L2."
        },
        "depositETH": {
            "stateMutability": "payable",
            "code": "function depositETH(uint32 _l2Gas, bytes _data) external payable",
            "inputs": {
                "_l2Gas": {
                    "type": "uint32",
                    "description": "Gas limit required to complete the deposit on L2."
                },
                "_data": {
                    "type": "bytes",
                    "description": "Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content."
                }
            },
            "outputs": {},
            "details": "Deposit an amount of the ETH to the caller's balance on L2."
        },
        "depositETHTo": {
            "stateMutability": "payable",
            "code": "function depositETHTo(address _to, uint32 _l2Gas, bytes _data) external payable",
            "inputs": {
                "_to": {
                    "type": "address",
                    "description": "L2 address to credit the withdrawal to."
                },
                "_l2Gas": {
                    "type": "uint32",
                    "description": "Gas limit required to complete the deposit on L2."
                },
                "_data": {
                    "type": "bytes",
                    "description": "Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content."
                }
            },
            "outputs": {},
            "details": "Deposit an amount of ETH to a recipient's balance on L2."
        },
        "deposits": {
            "stateMutability": "view",
            "code": "function deposits(address, address) external view returns (uint256)",
            "inputs": {
                "_0": {
                    "type": "address"
                },
                "_1": {
                    "type": "address"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            }
        },
        "donateETH": {
            "stateMutability": "payable",
            "code": "function donateETH() external payable",
            "inputs": {},
            "outputs": {},
            "details": "Adds ETH balance to the account. This is meant to allow for ETH to be migrated from an old gateway to a new gateway. NOTE: This is left for one upgrade only so we are able to receive the migrated ETH from the old contract"
        },
        "finalizeERC20Withdrawal": {
            "stateMutability": "nonpayable",
            "code": "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) external nonpayable",
            "inputs": {
                "_l1Token": {
                    "type": "address",
                    "description": "Address of L1 token to finalizeWithdrawal for."
                },
                "_l2Token": {
                    "type": "address",
                    "description": "Address of L2 token where withdrawal was initiated."
                },
                "_from": {
                    "type": "address",
                    "description": "L2 address initiating the transfer."
                },
                "_to": {
                    "type": "address",
                    "description": "L1 address to credit the withdrawal to."
                },
                "_amount": {
                    "type": "uint256",
                    "description": "Amount of the ERC20 to deposit."
                },
                "_data": {
                    "type": "bytes",
                    "description": "Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content."
                }
            },
            "outputs": {},
            "details": "Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized."
        },
        "finalizeETHWithdrawal": {
            "stateMutability": "nonpayable",
            "code": "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _data) external nonpayable",
            "inputs": {
                "_from": {
                    "type": "address",
                    "description": "L2 address initiating the transfer."
                },
                "_to": {
                    "type": "address",
                    "description": "L1 address to credit the withdrawal to."
                },
                "_amount": {
                    "type": "uint256",
                    "description": "Amount of the ERC20 to deposit."
                },
                "_data": {
                    "type": "bytes",
                    "description": "Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content."
                }
            },
            "outputs": {},
            "details": "Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ETH token. Since only the xDomainMessenger can call this function, it will never be called before the withdrawal is finalized."
        },
        "initialize": {
            "stateMutability": "nonpayable",
            "code": "function initialize(address _l1messenger, address _l2TokenBridge) external nonpayable",
            "inputs": {
                "_l1messenger": {
                    "type": "address",
                    "description": "L1 Messenger address being used for cross-chain communications."
                },
                "_l2TokenBridge": {
                    "type": "address",
                    "description": "L2 standard bridge address."
                }
            },
            "outputs": {}
        },
        "l2TokenBridge": {
            "stateMutability": "view",
            "code": "function l2TokenBridge() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address",
                    "description": "Address of the corresponding L2 bridge contract."
                }
            },
            "details": "get the address of the corresponding L2 bridge contract."
        },
        "messenger": {
            "stateMutability": "view",
            "code": "function messenger() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address"
                }
            }
        }
    },
    "events": {
        "ERC20DepositInitiated": {
            "code": "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
            "inputs": {
                "_l1Token": {
                    "type": "address",
                    "indexed": true
                },
                "_l2Token": {
                    "type": "address",
                    "indexed": true
                },
                "_from": {
                    "type": "address",
                    "indexed": true
                },
                "_to": {
                    "type": "address",
                    "indexed": false
                },
                "_amount": {
                    "type": "uint256",
                    "indexed": false
                },
                "_data": {
                    "type": "bytes",
                    "indexed": false
                }
            }
        },
        "ERC20WithdrawalFinalized": {
            "code": "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
            "inputs": {
                "_l1Token": {
                    "type": "address",
                    "indexed": true
                },
                "_l2Token": {
                    "type": "address",
                    "indexed": true
                },
                "_from": {
                    "type": "address",
                    "indexed": true
                },
                "_to": {
                    "type": "address",
                    "indexed": false
                },
                "_amount": {
                    "type": "uint256",
                    "indexed": false
                },
                "_data": {
                    "type": "bytes",
                    "indexed": false
                }
            }
        },
        "ETHDepositInitiated": {
            "code": "event ETHDepositInitiated(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
            "inputs": {
                "_from": {
                    "type": "address",
                    "indexed": true
                },
                "_to": {
                    "type": "address",
                    "indexed": true
                },
                "_amount": {
                    "type": "uint256",
                    "indexed": false
                },
                "_data": {
                    "type": "bytes",
                    "indexed": false
                }
            }
        },
        "ETHWithdrawalFinalized": {
            "code": "event ETHWithdrawalFinalized(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
            "inputs": {
                "_from": {
                    "type": "address",
                    "indexed": true
                },
                "_to": {
                    "type": "address",
                    "indexed": true
                },
                "_amount": {
                    "type": "uint256",
                    "indexed": false
                },
                "_data": {
                    "type": "bytes",
                    "indexed": false
                }
            }
        }
    },
    "errors": {},
    "title": "L1StandardBridge",
    "details": "The L1 ETH and ERC20 Bridge is a contract which stores deposited L1 funds and standard tokens that are in use on L2. It synchronizes a corresponding L2 Bridge, informing it of deposits and listening to it for newly finalized withdrawals.",
    "name": "L1StandardBridge"
}