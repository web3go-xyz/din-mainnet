{
  "abi": [
    {
      "inputs": [],
      "name": "doRevert",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b5060828061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063afc874d214602d575b600080fd5b60336035565b005b60405162461bcd60e51b815260206004820152601160248201527014995d995c9d195c881c995d995c9d1959607a1b604482015260640160405180910390fdfea164736f6c634300080f000a",
    "sourceMap": "57:102:43:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063afc874d214602d575b600080fd5b60336035565b005b60405162461bcd60e51b815260206004820152601160248201527014995d995c9d195c881c995d995c9d1959607a1b604482015260640160405180910390fdfea164736f6c634300080f000a",
    "sourceMap": "57:102:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:76;;;:::i;:::-;;;123:27;;-1:-1:-1;;;123:27:43;;216:2:101;123:27:43;;;198:21:101;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:101;;;267:47;331:18;;123:27:43;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "doRevert()": "afc874d2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"doRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/testing/helpers/Reverter.sol\":\"Reverter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds/=lib/multicall/lib/ds-test/src/\",\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":@std/=lib/multicall/lib/forge-std/src/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":multicall/=lib/multicall/\"]},\"sources\":{\"contracts/testing/helpers/Reverter.sol\":{\"keccak256\":\"0xdb3e8e36a68a69d306d66752233295d864d05dcc8e9594ba621198c5c91c958a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9593ccb9dc490af1f4e18858ef1813b5ceb431a3ea6df9e9c4cd7e51d7b6ef\",\"dweb:/ipfs/QmZVcvH8xzwf7nYmNipxwUESSGa1wyDb7JiL2r1b7XNixc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "doRevert"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ds/=lib/multicall/lib/ds-test/src/",
        ":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":@std/=lib/multicall/lib/forge-std/src/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":multicall/=lib/multicall/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/testing/helpers/Reverter.sol": "Reverter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/testing/helpers/Reverter.sol": {
        "keccak256": "0xdb3e8e36a68a69d306d66752233295d864d05dcc8e9594ba621198c5c91c958a",
        "urls": [
          "bzz-raw://5f9593ccb9dc490af1f4e18858ef1813b5ceb431a3ea6df9e9c4cd7e51d7b6ef",
          "dweb:/ipfs/QmZVcvH8xzwf7nYmNipxwUESSGa1wyDb7JiL2r1b7XNixc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/testing/helpers/Reverter.sol",
    "id": 38209,
    "exportedSymbols": {
      "Reverter": [
        38208
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:128:43",
    "nodes": [
      {
        "id": 38199,
        "nodeType": "PragmaDirective",
        "src": "32:23:43",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 38208,
        "nodeType": "ContractDefinition",
        "src": "57:102:43",
        "nodes": [
          {
            "id": 38207,
            "nodeType": "FunctionDefinition",
            "src": "81:76:43",
            "nodes": [],
            "body": {
              "id": 38206,
              "nodeType": "Block",
              "src": "113:44:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265766572746572207265766572746564",
                        "id": 38203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "130:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3edf6a705c1ac2ccf4eb0ce9f05039f24b547c0f1460366bd5050c270cb80ba",
                          "typeString": "literal_string \"Reverter reverted\""
                        },
                        "value": "Reverter reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c3edf6a705c1ac2ccf4eb0ce9f05039f24b547c0f1460366bd5050c270cb80ba",
                          "typeString": "literal_string \"Reverter reverted\""
                        }
                      ],
                      "id": 38202,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "123:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 38204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "123:27:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38205,
                  "nodeType": "ExpressionStatement",
                  "src": "123:27:43"
                }
              ]
            },
            "functionSelector": "afc874d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doRevert",
            "nameLocation": "90:8:43",
            "parameters": {
              "id": 38200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "98:2:43"
            },
            "returnParameters": {
              "id": 38201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "113:0:43"
            },
            "scope": 38208,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Reverter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38208
        ],
        "name": "Reverter",
        "nameLocation": "66:8:43",
        "scope": 38209,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 43
}