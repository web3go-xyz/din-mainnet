{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "testFuzz_check_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "testFuzz_check_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "343:1359:15:-:0;;;1572:26:32;;;1594:4;-1:-1:-1;;1572:26:32;;;;;;;;3161:44:35;;;;;;;;;;;343:1359:15;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806366d9a9a01161008c578063b5508aa911610066578063b5508aa914610164578063ba414fa61461016c578063e20c9f7114610184578063fa7626d41461018c57600080fd5b806366d9a9a01461013257806385226c8114610147578063916a17c61461015c57600080fd5b80630a9254e4146100d45780631ed7831c146100de578063351efc18146100fc578063396b48891461010f5780633e5e3c23146101225780633f7286f41461012a575b600080fd5b6100dc610199565b005b6100e66101e4565b6040516100f39190610d76565b60405180910390f35b6100dc61010a366004610dc3565b610246565b6100dc61011d366004610dc3565b610370565b6100e661051c565b6100e661057c565b61013a6105dc565b6040516100f39190610dfb565b61014f6106cb565b6040516100f39190610efe565b61013a61079b565b61014f610881565b610174610951565b60405190151581526020016100f3565b6100e6610a7c565b6000546101749060ff1681565b6040516101a590610d69565b604051809103906000f0801580156101c1573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561023c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161021e575b5050505050905090565b6040805180820182526001600160a01b038416808252602082018490529151632631f2b160e11b815291318311600483015290737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b5050601b546040805185516001600160a01b0390811660208084019190915287015182840152825180830384018152606083019384905263c64b3bb560e01b90935261036b9550909216925063c64b3bb5916103239190606401610f60565b602060405180830381865afa158015610340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103649190610f7a565b6000610adc565b505050565b6040805180820182526001600160a01b0384168152602081018390529051632631f2b160e11b81526000198314156004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b1580156103da57600080fd5b505afa1580156103ee573d6000803e3d6000fd5b50737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d915085905061041b856001610f9c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b5050601b546040805185516001600160a01b0390811660208084019190915287015182840152825180830384018152606083019384905263c64b3bb560e01b90935261036b9550909216925063c64b3bb5916104d49190606401610f60565b602060405180830381865afa1580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190610f7a565b6001610adc565b6060600f80548060200260200160405190810160405280929190818152602001828054801561023c576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161021e575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561023c576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161021e575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106c25760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106aa57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161066c5790505b50505050508152505081526020019060010190610600565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156106c257838290600052602060002001805461070e90610fc3565b80601f016020809104026020016040519081016040528092919081815260200182805461073a90610fc3565b80156107875780601f1061075c57610100808354040283529160200191610787565b820191906000526020600020905b81548152906001019060200180831161076a57829003601f168201915b5050505050815260200190600101906106ef565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106c25760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561086957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161082b5790505b505050505081525050815260200190600101906107bf565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156106c25783829060005260206000200180546108c490610fc3565b80601f01602080910402602001604051908101604052809291908181526020018280546108f090610fc3565b801561093d5780601f106109125761010080835404028352916020019161093d565b820191906000526020600020905b81548152906001019060200180831161092057829003601f168201915b5050505050815260200190600101906108a5565b60008054610100900460ff16156109715750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a775760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916109ff917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610ffd565b60408051601f1981840301815290829052610a199161102e565b6000604051808303816000865af19150503d8060008114610a56576040519150601f19603f3d011682016040523d82523d6000602084013e610a5b565b606091505b5091505080806020019051810190610a739190610f7a565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561023c576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161021e575050505050905090565b80151582151514610c59577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610b519060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382610ba2576040518060400160405280600581526020016466616c736560d81b815250610bc0565b604051806040016040528060048152602001637472756560e01b8152505b604051610bcd919061104a565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381610c1e576040518060400160405280600581526020016466616c736560d81b815250610c3c565b604051806040016040528060048152602001637472756560e01b8152505b604051610c49919061107e565b60405180910390a1610c59610c5d565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610d585760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610cf79291602001610ffd565b60408051601f1981840301815290829052610d119161102e565b6000604051808303816000865af19150503d8060008114610d4e576040519150601f19603f3d011682016040523d82523d6000602084013e610d53565b606091505b505050505b6000805461ff001916610100179055565b6101df806110b383390190565b6020808252825182820181905260009190848201906040850190845b81811015610db75783516001600160a01b031683529284019291840191600101610d92565b50909695505050505050565b60008060408385031215610dd657600080fd5b82356001600160a01b0381168114610ded57600080fd5b946020939093013593505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610e9f57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610e8a5783516001600160e01b0319168252928b019260019290920191908b0190610e60565b50978a01979550505091870191600101610e23565b50919998505050505050505050565b60005b83811015610ec9578181015183820152602001610eb1565b50506000910152565b60008151808452610eea816020860160208601610eae565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610f5357603f19888603018452610f41858351610ed2565b94509285019290850190600101610f25565b5092979650505050505050565b602081526000610f736020830184610ed2565b9392505050565b600060208284031215610f8c57600080fd5b81518015158114610f7357600080fd5b80820180821115610fbd57634e487b7160e01b600052601160045260246000fd5b92915050565b600181811c90821680610fd757607f821691505b602082108103610ff757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090611020816004850160208701610eae565b919091016004019392505050565b60008251611040818460208701610eae565b9190910192915050565b60408152600a6040820152690808080808081319599d60b21b6060820152608060208201526000610f736080830184610ed2565b60408152600a6040820152690808080808149a59da1d60b21b6060820152608060208201526000610f736080830184610ed256fe608060405234801561001057600080fd5b506101bf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004361003e36600461009d565b610057565b604051901515815260200160405180910390f35b6000808280602001905181019061006e919061014e565b602081015190516001600160a01b031631119392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100af57600080fd5b813567ffffffffffffffff808211156100c757600080fd5b818401915084601f8301126100db57600080fd5b8135818111156100ed576100ed610087565b604051601f8201601f19908116603f0116810190838211818310171561011557610115610087565b8160405282815287602084870101111561012e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006040828403121561016057600080fd5b6040516040810181811067ffffffffffffffff8211171561018357610183610087565b60405282516001600160a01b038116811461019d57600080fd5b8152602092830151928101929092525091905056fea164736f6c6343000810000aa164736f6c6343000810000a",
    "sourceMap": "343:1359:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;553:69;;;:::i;:::-;;2161:134:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1373:327:15;;;;;;:::i;:::-;;:::i;795:403::-;;;;;;:::i;:::-;;:::i;2930:133:38:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:32:-;;;:::i;:::-;;;4114:14:49;;4107:22;4089:41;;4077:2;4062:18;1819:584:32;3949:187:49;2013:142:38;;;:::i;1572:26:32:-;;;;;;;;;553:69:15;593:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:1:15;:26;;-1:-1:-1;;;;;;589:26:15;-1:-1:-1;;;;;589:26:15;;;;;;;;;;553:69::o;2161:134:38:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:38;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1373:327:15:-;1494:99;;;;;;;;-1:-1:-1;;;;;1494:99:15;;;;;;;;;;;1604:39;;-1:-1:-1;;;1604:39:15;;1614:15;;-1:-1:-1;;1604:39:15;;;4089:41:49;1494:99:15;1604:9;;;;4062:18:49;;1604:39:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1663:1:15;;1671:13;;;4359::49;;-1:-1:-1;;;;;4355:39:49;;;1671:13:15;;;;4337:58:49;;;;4439:17;;4433:24;4411:20;;;4404:54;1671:13:15;;;;;;;;;4310:18:49;;;1671:13:15;;;;-1:-1:-1;;;1663:22:15;;;1654:39;;-1:-1:-1;1663:1:15;;;;-1:-1:-1;1663:7:15;;:22;;1671:13;1663:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1687:5;1654:8;:39::i;:::-;1449:251;1373:327;;:::o;795:403::-;919:99;;;;;;;;-1:-1:-1;;;;;919:99:15;;;;;;;;;;1058:42;;-1:-1:-1;;;1058:42:15;;-1:-1:-1;;1068:31:15;;;1058:42;;;4089:41:49;1058:9:15;;;;4062:18:49;;1058:42:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1110:7:15;;-1:-1:-1;1110:7:15;;-1:-1:-1;1118:7:15;;-1:-1:-1;1127:14:15;:10;1140:1;1127:14;:::i;:::-;1110:32;;-1:-1:-1;;;;;;1110:32:15;;;;;;;-1:-1:-1;;;;;5393:32:49;;;1110::15;;;5375:51:49;5442:18;;;5435:34;5348:18;;1110:32:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1162:1:15;;1170:13;;;4359::49;;-1:-1:-1;;;;;4355:39:49;;;1170:13:15;;;;4337:58:49;;;;4439:17;;4433:24;4411:20;;;4404:54;1170:13:15;;;;;;;;;4310:18:49;;;1170:13:15;;;;-1:-1:-1;;;1162:22:15;;;1153:38;;-1:-1:-1;1162:1:15;;;;-1:-1:-1;1162:7:15;;:22;;1170:13;1162:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1186:4;1153:8;:38::i;2930:133:38:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:38;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:38;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:32;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:32;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;5375:51:49;;;-1:-1:-1;;;5442:18:49;;;5435:34;2196:43:32;;;;;;;;;5348:18:49;;;2196:43:32;;;-1:-1:-1;;1671:64:32;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:32;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:32:o;2013:142:38:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:38;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;789:312:34:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;7027:2:49;7009:21;;;7066:2;7046:18;;;7039:30;7105:34;7100:2;7085:18;;7078:62;-1:-1:-1;;;7171:2:49;7156:18;;7149:32;7213:3;7198:19;;6825:398;881:41:34;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:34;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:34;;;;1012:52;;;;;;:::i;:::-;;;;;;;;1078:6;:4;:6::i;:::-;789:312;;:::o;2410:424:32:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;8344:51:49;;;-1:-1:-1;;;8411:18:49;;;8404:34;;;;2705:4:32;8454:18:49;;;8447:34;2482:11:32;;1671:64;2579:43;;8317:18:49;;2645:67:32;;;-1:-1:-1;;2645:67:32;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:32;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:32;2813:7;:14;;-1:-1:-1;;2813:14:32;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;14:658:49:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:49;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:49;;14:658;-1:-1:-1;;;;;;14:658:49:o;677:354::-;745:6;753;806:2;794:9;785:7;781:23;777:32;774:52;;;822:1;819;812:12;774:52;848:23;;-1:-1:-1;;;;;900:31:49;;890:42;;880:70;;946:1;943;936:12;880:70;969:5;1021:2;1006:18;;;;993:32;;-1:-1:-1;;;677:354:49:o;1036:1569::-;1240:4;1269:2;1309;1298:9;1294:18;1339:2;1328:9;1321:21;1362:6;1397;1391:13;1428:6;1420;1413:22;1454:2;1444:12;;1487:2;1476:9;1472:18;1465:25;;1549:2;1539:6;1536:1;1532:14;1521:9;1517:30;1513:39;1587:2;1579:6;1575:15;1608:1;1629;1639:937;1655:6;1650:3;1647:15;1639:937;;;1724:22;;;-1:-1:-1;;1720:36:49;1708:49;;1780:13;;1867:9;;-1:-1:-1;;;;;1863:35:49;1848:51;;1938:11;;1932:18;1970:15;;;1963:27;;;2051:19;;1820:15;;;2083:24;;;2173:21;;;;2218:1;;2141:2;2129:15;;;2232:236;2248:8;2243:3;2240:17;2232:236;;;2329:15;;-1:-1:-1;;;;;;2325:42:49;2311:57;;2437:17;;;;2276:1;2267:11;;;;;2394:14;;;;2232:236;;;-1:-1:-1;2554:12:49;;;;2491:5;-1:-1:-1;;;2519:15:49;;;;1681:1;1672:11;1639:937;;;-1:-1:-1;2593:6:49;;1036:1569;-1:-1:-1;;;;;;;;;1036:1569:49:o;2610:250::-;2695:1;2705:113;2719:6;2716:1;2713:13;2705:113;;;2795:11;;;2789:18;2776:11;;;2769:39;2741:2;2734:10;2705:113;;;-1:-1:-1;;2852:1:49;2834:16;;2827:27;2610:250::o;2865:271::-;2907:3;2945:5;2939:12;2972:6;2967:3;2960:19;2988:76;3057:6;3050:4;3045:3;3041:14;3034:4;3027:5;3023:16;2988:76;:::i;:::-;3118:2;3097:15;-1:-1:-1;;3093:29:49;3084:39;;;;3125:4;3080:50;;2865:271;-1:-1:-1;;2865:271:49:o;3141:803::-;3303:4;3332:2;3372;3361:9;3357:18;3402:2;3391:9;3384:21;3425:6;3460;3454:13;3491:6;3483;3476:22;3529:2;3518:9;3514:18;3507:25;;3591:2;3581:6;3578:1;3574:14;3563:9;3559:30;3555:39;3541:53;;3629:2;3621:6;3617:15;3650:1;3660:255;3674:6;3671:1;3668:13;3660:255;;;3767:2;3763:7;3751:9;3743:6;3739:22;3735:36;3730:3;3723:49;3795:40;3828:6;3819;3813:13;3795:40;:::i;:::-;3785:50;-1:-1:-1;3893:12:49;;;;3858:15;;;;3696:1;3689:9;3660:255;;;-1:-1:-1;3932:6:49;;3141:803;-1:-1:-1;;;;;;;3141:803:49:o;4469:218::-;4616:2;4605:9;4598:21;4579:4;4636:45;4677:2;4666:9;4662:18;4654:6;4636:45;:::i;:::-;4628:53;4469:218;-1:-1:-1;;;4469:218:49:o;4692:277::-;4759:6;4812:2;4800:9;4791:7;4787:23;4783:32;4780:52;;;4828:1;4825;4818:12;4780:52;4860:9;4854:16;4913:5;4906:13;4899:21;4892:5;4889:32;4879:60;;4935:1;4932;4925:12;4974:222;5039:9;;;5060:10;;;5057:133;;;5112:10;5107:3;5103:20;5100:1;5093:31;5147:4;5144:1;5137:15;5175:4;5172:1;5165:15;5057:133;4974:222;;;;:::o;5480:380::-;5559:1;5555:12;;;;5602;;;5623:61;;5677:4;5669:6;5665:17;5655:27;;5623:61;5730:2;5722:6;5719:14;5699:18;5696:38;5693:161;;5776:10;5771:3;5767:20;5764:1;5757:31;5811:4;5808:1;5801:15;5839:4;5836:1;5829:15;5693:161;;5480:380;;;:::o;6144:384::-;-1:-1:-1;;;;;;6329:33:49;;6317:46;;6386:13;;6299:3;;6408:74;6386:13;6471:1;6462:11;;6455:4;6443:17;;6408:74;:::i;:::-;6502:16;;;;6520:1;6498:24;;6144:384;-1:-1:-1;;;6144:384:49:o;6533:287::-;6662:3;6700:6;6694:13;6716:66;6775:6;6770:3;6763:4;6755:6;6751:17;6716:66;:::i;:::-;6798:16;;;;;6533:287;-1:-1:-1;;6533:287:49:o;7228:452::-;7478:2;7467:9;7460:21;7517:2;7512;7501:9;7497:18;7490:30;-1:-1:-1;;;7551:2:49;7540:9;7536:18;7529:40;7607:3;7600:4;7589:9;7585:20;7578:33;7441:4;7628:46;7669:3;7658:9;7654:19;7646:6;7628:46;:::i;7685:452::-;7935:2;7924:9;7917:21;7974:2;7969;7958:9;7954:18;7947:30;-1:-1:-1;;;8008:2:49;7997:9;7993:18;7986:40;8064:3;8057:4;8046:9;8042:20;8035:33;7898:4;8085:46;8126:3;8115:9;8111:19;8103:6;8085:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFuzz_check_fails(address,uint256)": "351efc18",
    "testFuzz_check_succeeds(address,uint256)": "396b4889"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"testFuzz_check_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"testFuzz_check_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"CheckBalanceHighTest\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setUp()\":{\"notice\":\"Deploy the `CheckTrue` contract.\"},\"testFuzz_check_fails(address,uint256)\":{\"notice\":\"Fuzz the `check` function and assert that it always returns false         when the target's balance is smaller than the threshold.\"},\"testFuzz_check_succeeds(address,uint256)\":{\"notice\":\"Fuzz the `check` function and assert that it always returns true         when the target's balance is larger than the threshold.\"}},\"notice\":\"Tests the CheckBalanceHigh contract via fuzzing both the success case         and the failure case.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/foundry-tests/CheckBalanceHigh.t.sol\":\"CheckBalanceHighTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds/=lib/multicall/lib/ds-test/src/\",\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":@std/=lib/multicall/lib/forge-std/src/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":multicall/=lib/multicall/\"]},\"sources\":{\"contracts/foundry-tests/CheckBalanceHigh.t.sol\":{\"keccak256\":\"0xa709339a85cc32091567745662dba3fb44bcbbf3cec72dc606eff3bcab94a66d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6b6176f0921bdaa213a108362839e715ff4e6a1304acc05f43c8d406dc27a82\",\"dweb:/ipfs/QmfMnqA44dT77oaTjAmyz5ovHDGyapRm57TYGdMQyuUFW7\"]},\"contracts/universal/drippie/IDripCheck.sol\":{\"keccak256\":\"0xb52c89360566b2963dfd82cb2cc23f0c3ce4503a69e8563878e8aa80b6c60b3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1a67f456f8eb6219f4e85857714bed1c27ce934e5e81497b733646848b315c\",\"dweb:/ipfs/QmRFwsdm5ZCWP9b3S7YAz9TuCdgLzsNrAMpX5WckU3v7WG\"]},\"contracts/universal/drippie/dripchecks/CheckBalanceHigh.sol\":{\"keccak256\":\"0xcb27d9e50a7c32406872b8fdc4ca62ee0d27372eb9077657f6d16f3cd3b58c85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3667196094e9e295f8bd35e38c380fc704480767439de8b8add8bc4341eed00c\",\"dweb:/ipfs/QmSooTertdN6VARY2TsVAh462RazEpKSYct52L8j5oDatW\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_check_fails"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_check_succeeds"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setUp()": {
            "notice": "Deploy the `CheckTrue` contract."
          },
          "testFuzz_check_fails(address,uint256)": {
            "notice": "Fuzz the `check` function and assert that it always returns false         when the target's balance is smaller than the threshold."
          },
          "testFuzz_check_succeeds(address,uint256)": {
            "notice": "Fuzz the `check` function and assert that it always returns true         when the target's balance is larger than the threshold."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ds/=lib/multicall/lib/ds-test/src/",
        ":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":@std/=lib/multicall/lib/forge-std/src/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":multicall/=lib/multicall/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/foundry-tests/CheckBalanceHigh.t.sol": "CheckBalanceHighTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/foundry-tests/CheckBalanceHigh.t.sol": {
        "keccak256": "0xa709339a85cc32091567745662dba3fb44bcbbf3cec72dc606eff3bcab94a66d",
        "urls": [
          "bzz-raw://b6b6176f0921bdaa213a108362839e715ff4e6a1304acc05f43c8d406dc27a82",
          "dweb:/ipfs/QmfMnqA44dT77oaTjAmyz5ovHDGyapRm57TYGdMQyuUFW7"
        ],
        "license": "MIT"
      },
      "contracts/universal/drippie/IDripCheck.sol": {
        "keccak256": "0xb52c89360566b2963dfd82cb2cc23f0c3ce4503a69e8563878e8aa80b6c60b3f",
        "urls": [
          "bzz-raw://2d1a67f456f8eb6219f4e85857714bed1c27ce934e5e81497b733646848b315c",
          "dweb:/ipfs/QmRFwsdm5ZCWP9b3S7YAz9TuCdgLzsNrAMpX5WckU3v7WG"
        ],
        "license": "MIT"
      },
      "contracts/universal/drippie/dripchecks/CheckBalanceHigh.sol": {
        "keccak256": "0xcb27d9e50a7c32406872b8fdc4ca62ee0d27372eb9077657f6d16f3cd3b58c85",
        "urls": [
          "bzz-raw://3667196094e9e295f8bd35e38c380fc704480767439de8b8add8bc4341eed00c",
          "dweb:/ipfs/QmSooTertdN6VARY2TsVAh462RazEpKSYct52L8j5oDatW"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/foundry-tests/CheckBalanceHigh.t.sol",
    "id": 27107,
    "exportedSymbols": {
      "CheckBalanceHigh": [
        30199
      ],
      "CheckBalanceHighTest": [
        27106
      ],
      "Test": [
        33174
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:1672:15",
    "nodes": [
      {
        "id": 26990,
        "nodeType": "PragmaDirective",
        "src": "31:23:15",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 26992,
        "nodeType": "ImportDirective",
        "src": "56:42:15",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27107,
        "sourceUnit": 33175,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26991,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33174,
              "src": "65:4:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26994,
        "nodeType": "ImportDirective",
        "src": "99:88:15",
        "nodes": [],
        "absolutePath": "contracts/universal/drippie/dripchecks/CheckBalanceHigh.sol",
        "file": "../universal/drippie/dripchecks/CheckBalanceHigh.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27107,
        "sourceUnit": 30200,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26993,
              "name": "CheckBalanceHigh",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30199,
              "src": "108:16:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27106,
        "nodeType": "ContractDefinition",
        "src": "343:1359:15",
        "nodes": [
          {
            "id": 27001,
            "nodeType": "VariableDeclaration",
            "src": "464:18:15",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26998,
              "nodeType": "StructuredDocumentation",
              "src": "387:72:15",
              "text": " @notice An instance of the CheckBalanceHigh contract."
            },
            "mutability": "mutable",
            "name": "c",
            "nameLocation": "481:1:15",
            "scope": 27106,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
              "typeString": "contract CheckBalanceHigh"
            },
            "typeName": {
              "id": 27000,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26999,
                "name": "CheckBalanceHigh",
                "nameLocations": [
                  "464:16:15"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30199,
                "src": "464:16:15"
              },
              "referencedDeclaration": 30199,
              "src": "464:16:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
                "typeString": "contract CheckBalanceHigh"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27013,
            "nodeType": "FunctionDefinition",
            "src": "553:69:15",
            "nodes": [],
            "body": {
              "id": 27012,
              "nodeType": "Block",
              "src": "579:43:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27005,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27001,
                      "src": "589:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
                        "typeString": "contract CheckBalanceHigh"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "593:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CheckBalanceHigh_$30199_$",
                          "typeString": "function () returns (contract CheckBalanceHigh)"
                        },
                        "typeName": {
                          "id": 27007,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 27006,
                            "name": "CheckBalanceHigh",
                            "nameLocations": [
                              "597:16:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30199,
                            "src": "597:16:15"
                          },
                          "referencedDeclaration": 30199,
                          "src": "597:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
                            "typeString": "contract CheckBalanceHigh"
                          }
                        }
                      },
                      "id": 27009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "593:22:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
                        "typeString": "contract CheckBalanceHigh"
                      }
                    },
                    "src": "589:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
                      "typeString": "contract CheckBalanceHigh"
                    }
                  },
                  "id": 27011,
                  "nodeType": "ExpressionStatement",
                  "src": "589:26:15"
                }
              ]
            },
            "documentation": {
              "id": 27002,
              "nodeType": "StructuredDocumentation",
              "src": "489:59:15",
              "text": " @notice Deploy the `CheckTrue` contract."
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "562:5:15",
            "parameters": {
              "id": 27003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "567:2:15"
            },
            "returnParameters": {
              "id": 27004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:15"
            },
            "scope": 27106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27065,
            "nodeType": "FunctionDefinition",
            "src": "795:403:15",
            "nodes": [],
            "body": {
              "id": 27064,
              "nodeType": "Block",
              "src": "874:324:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    27025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27025,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "915:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 27064,
                      "src": "884:32:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                        "typeString": "struct CheckBalanceHigh.Params"
                      },
                      "typeName": {
                        "id": 27024,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27023,
                          "name": "CheckBalanceHigh.Params",
                          "nameLocations": [
                            "884:16:15",
                            "901:6:15"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30166,
                          "src": "884:23:15"
                        },
                        "referencedDeclaration": 30166,
                        "src": "884:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$30166_storage_ptr",
                          "typeString": "struct CheckBalanceHigh.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27031,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27028,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27016,
                        "src": "965:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27029,
                        "name": "_threshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27018,
                        "src": "997:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27026,
                        "name": "CheckBalanceHigh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30199,
                        "src": "919:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheckBalanceHigh_$30199_$",
                          "typeString": "type(contract CheckBalanceHigh)"
                        }
                      },
                      "id": 27027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "936:6:15",
                      "memberName": "Params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30166,
                      "src": "919:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Params_$30166_storage_ptr_$",
                        "typeString": "type(struct CheckBalanceHigh.Params storage pointer)"
                      }
                    },
                    "id": 27030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "957:6:15",
                      "986:9:15"
                    ],
                    "names": [
                      "target",
                      "threshold"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "919:99:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                      "typeString": "struct CheckBalanceHigh.Params memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "884:134:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27035,
                          "name": "_threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27018,
                          "src": "1068:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 27038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1087:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 27037,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1087:7:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 27036,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1082:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 27039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1082:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 27040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1096:3:15",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1082:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1068:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 27032,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33233,
                        "src": "1058:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$43811",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1061:6:15",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43335,
                      "src": "1058:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 27042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27043,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27047,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27016,
                        "src": "1118:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27048,
                          "name": "_threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27018,
                          "src": "1127:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1140:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1127:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27044,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33233,
                        "src": "1110:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$43811",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1113:4:15",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43453,
                      "src": "1110:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 27051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27052,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:32:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 27058,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27025,
                                "src": "1181:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                                  "typeString": "struct CheckBalanceHigh.Params memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                                  "typeString": "struct CheckBalanceHigh.Params memory"
                                }
                              ],
                              "expression": {
                                "id": 27056,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1170:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 27057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1174:6:15",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1170:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 27059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1170:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 27054,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27001,
                            "src": "1162:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
                              "typeString": "contract CheckBalanceHigh"
                            }
                          },
                          "id": 27055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1164:5:15",
                          "memberName": "check",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30198,
                          "src": "1162:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 27060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1162:22:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1186:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27053,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33368,
                        33393,
                        33406,
                        33422,
                        33464,
                        33506,
                        33548,
                        33585,
                        33622,
                        33659,
                        31659,
                        31684,
                        31714,
                        31739,
                        31798,
                        31823,
                        31853,
                        31878,
                        32978,
                        33013
                      ],
                      "referencedDeclaration": 33368,
                      "src": "1153:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 27062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27063,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:38:15"
                }
              ]
            },
            "documentation": {
              "id": 27014,
              "nodeType": "StructuredDocumentation",
              "src": "628:162:15",
              "text": " @notice Fuzz the `check` function and assert that it always returns true\n         when the target's balance is larger than the threshold."
            },
            "functionSelector": "396b4889",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_check_succeeds",
            "nameLocation": "804:23:15",
            "parameters": {
              "id": 27019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27016,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "836:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 27065,
                  "src": "828:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27018,
                  "mutability": "mutable",
                  "name": "_threshold",
                  "nameLocation": "853:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 27065,
                  "src": "845:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:37:15"
            },
            "returnParameters": {
              "id": 27020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "874:0:15"
            },
            "scope": 27106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27105,
            "nodeType": "FunctionDefinition",
            "src": "1373:327:15",
            "nodes": [],
            "body": {
              "id": 27104,
              "nodeType": "Block",
              "src": "1449:251:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    27077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27077,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "1490:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 27104,
                      "src": "1459:32:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                        "typeString": "struct CheckBalanceHigh.Params"
                      },
                      "typeName": {
                        "id": 27076,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27075,
                          "name": "CheckBalanceHigh.Params",
                          "nameLocations": [
                            "1459:16:15",
                            "1476:6:15"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30166,
                          "src": "1459:23:15"
                        },
                        "referencedDeclaration": 30166,
                        "src": "1459:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$30166_storage_ptr",
                          "typeString": "struct CheckBalanceHigh.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27083,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27080,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27068,
                        "src": "1540:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27081,
                        "name": "_threshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27070,
                        "src": "1572:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27078,
                        "name": "CheckBalanceHigh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30199,
                        "src": "1494:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheckBalanceHigh_$30199_$",
                          "typeString": "type(contract CheckBalanceHigh)"
                        }
                      },
                      "id": 27079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1511:6:15",
                      "memberName": "Params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30166,
                      "src": "1494:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Params_$30166_storage_ptr_$",
                        "typeString": "type(struct CheckBalanceHigh.Params storage pointer)"
                      }
                    },
                    "id": 27082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1532:6:15",
                      "1561:9:15"
                    ],
                    "names": [
                      "target",
                      "threshold"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1494:99:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                      "typeString": "struct CheckBalanceHigh.Params memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1459:134:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 27087,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27068,
                            "src": "1614:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 27088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1622:7:15",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1614:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 27089,
                          "name": "_threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27070,
                          "src": "1632:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1614:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 27084,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33233,
                        "src": "1604:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$43811",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1607:6:15",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43335,
                      "src": "1604:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 27091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27092,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 27098,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27077,
                                "src": "1682:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                                  "typeString": "struct CheckBalanceHigh.Params memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Params_$30166_memory_ptr",
                                  "typeString": "struct CheckBalanceHigh.Params memory"
                                }
                              ],
                              "expression": {
                                "id": 27096,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1671:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 27097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1675:6:15",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1671:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 27099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1671:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 27094,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27001,
                            "src": "1663:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CheckBalanceHigh_$30199",
                              "typeString": "contract CheckBalanceHigh"
                            }
                          },
                          "id": 27095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1665:5:15",
                          "memberName": "check",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30198,
                          "src": "1663:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 27100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1663:22:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 27101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1687:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27093,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33368,
                        33393,
                        33406,
                        33422,
                        33464,
                        33506,
                        33548,
                        33585,
                        33622,
                        33659,
                        31659,
                        31684,
                        31714,
                        31739,
                        31798,
                        31823,
                        31853,
                        31878,
                        32978,
                        33013
                      ],
                      "referencedDeclaration": 33368,
                      "src": "1654:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 27102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27103,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:39:15"
                }
              ]
            },
            "documentation": {
              "id": 27066,
              "nodeType": "StructuredDocumentation",
              "src": "1204:164:15",
              "text": " @notice Fuzz the `check` function and assert that it always returns false\n         when the target's balance is smaller than the threshold."
            },
            "functionSelector": "351efc18",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_check_fails",
            "nameLocation": "1382:20:15",
            "parameters": {
              "id": 27071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27068,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1411:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 27105,
                  "src": "1403:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27070,
                  "mutability": "mutable",
                  "name": "_threshold",
                  "nameLocation": "1428:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 27105,
                  "src": "1420:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:37:15"
            },
            "returnParameters": {
              "id": 27072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:0:15"
            },
            "scope": 27106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26996,
              "name": "Test",
              "nameLocations": [
                "376:4:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33174,
              "src": "376:4:15"
            },
            "id": 26997,
            "nodeType": "InheritanceSpecifier",
            "src": "376:4:15"
          }
        ],
        "canonicalName": "CheckBalanceHighTest",
        "contractDependencies": [
          30199
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 26995,
          "nodeType": "StructuredDocumentation",
          "src": "189:153:15",
          "text": " @title  CheckBalanceHighTest\n @notice Tests the CheckBalanceHigh contract via fuzzing both the success case\n         and the failure case."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27106,
          33174,
          33240,
          33237,
          42305,
          38063,
          37773,
          37094,
          35361,
          34667,
          33125
        ],
        "name": "CheckBalanceHighTest",
        "nameLocation": "352:20:15",
        "scope": 27107,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 15
}