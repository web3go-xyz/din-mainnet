{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "about",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "AttestationCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "about",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes"
            }
          ],
          "internalType": "struct AttestationStation.AttestationData[]",
          "name": "_attestations",
          "type": "tuple[]"
        }
      ],
      "name": "attest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_about",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_val",
          "type": "bytes"
        }
      ],
      "name": "attest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "attestations",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b506001608081905260a052600060c05260805160a05160c05161091f61004f60003960006101ad015260006101840152600061015b015261091f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f366004610404565b6100aa565b6040516100719190610498565b60405180910390f35b610064610154565b6100956100903660046104b2565b6101f7565b005b6100956100a53660046105ca565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d390610621565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff90610621565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f00000000000000000000000000000000000000000000000000000000000000006102df565b6101a87f00000000000000000000000000000000000000000000000000000000000000006102df565b6101d17f00000000000000000000000000000000000000000000000000000000000000006102df565b6040516020016101e39392919061065b565b604051602081830303815290604052905090565b8060005b81811015610254576000848483818110610217576102176106b5565b905060200281019061022991906106cb565b610232906106eb565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b336000908152602081815260408083206001600160a01b03871684528252808320858452909152902061028d82826107b6565b5081836001600160a01b0316336001600160a01b03167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102d29190610498565b60405180910390a4505050565b6060816000036103065750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610330578061031a8161088c565b91506103299050600a836108bb565b915061030a565b60008167ffffffffffffffff81111561034b5761034b610527565b6040519080825280601f01601f191660200182016040528015610375576020820181803683370190505b5090505b84156103e05761038a6001836108cf565b9150610397600a866108e6565b6103a29060306108fa565b60f81b8183815181106103b7576103b76106b5565b60200101906001600160f81b031916908160001a9053506103d9600a866108bb565b9450610379565b949350505050565b80356001600160a01b03811681146103ff57600080fd5b919050565b60008060006060848603121561041957600080fd5b610422846103e8565b9250610430602085016103e8565b9150604084013590509250925092565b60005b8381101561045b578181015183820152602001610443565b838111156102545750506000910152565b60008151808452610484816020860160208601610440565b601f01601f19169290920160200192915050565b6020815260006104ab602083018461046c565b9392505050565b600080602083850312156104c557600080fd5b823567ffffffffffffffff808211156104dd57600080fd5b818501915085601f8301126104f157600080fd5b81358181111561050057600080fd5b8660208260051b850101111561051557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261054e57600080fd5b813567ffffffffffffffff8082111561056957610569610527565b604051601f8301601f19908116603f0116810190828211818310171561059157610591610527565b816040528381528660208588010111156105aa57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105df57600080fd5b6105e8846103e8565b925060208401359150604084013567ffffffffffffffff81111561060b57600080fd5b6106178682870161053d565b9150509250925092565b600181811c9082168061063557607f821691505b60208210810361065557634e487b7160e01b600052602260045260246000fd5b50919050565b6000845161066d818460208901610440565b8083019050601760f91b808252855161068d816001850160208a01610440565b600192019182015283516106a8816002840160208801610440565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126106e157600080fd5b9190910192915050565b6000606082360312156106fd57600080fd5b6040516060810167ffffffffffffffff828210818311171561072157610721610527565b8160405261072e856103e8565b835260208501356020840152604085013591508082111561074e57600080fd5b5061075b3682860161053d565b60408301525092915050565b601f8211156107b157600081815260208120601f850160051c8101602086101561078e5750805b601f850160051c820191505b818110156107ad5782815560010161079a565b5050505b505050565b815167ffffffffffffffff8111156107d0576107d0610527565b6107e4816107de8454610621565b84610767565b602080601f83116001811461081957600084156108015750858301515b600019600386901b1c1916600185901b1785556107ad565b600085815260208120601f198616915b8281101561084857888601518255948401946001909101908401610829565b50858210156108665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820161089e5761089e610876565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826108ca576108ca6108a5565b500490565b6000828210156108e1576108e1610876565b500390565b6000826108f5576108f56108a5565b500690565b6000821982111561090d5761090d610876565b50019056fea164736f6c634300080f000a",
    "sourceMap": "270:2154:52:-:0;;;1356:32;;;;;;;;;-1:-1:-1;1377:1:52;762:22:57;;;;794;;1383:1:52;826:22:57;;270:2154:52;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f366004610404565b6100aa565b6040516100719190610498565b60405180910390f35b610064610154565b6100956100903660046104b2565b6101f7565b005b6100956100a53660046105ca565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d390610621565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff90610621565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f00000000000000000000000000000000000000000000000000000000000000006102df565b6101a87f00000000000000000000000000000000000000000000000000000000000000006102df565b6101d17f00000000000000000000000000000000000000000000000000000000000000006102df565b6040516020016101e39392919061065b565b604051602081830303815290604052905090565b8060005b81811015610254576000848483818110610217576102176106b5565b905060200281019061022991906106cb565b610232906106eb565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b336000908152602081815260408083206001600160a01b03871684528252808320858452909152902061028d82826107b6565b5081836001600160a01b0316336001600160a01b03167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102d29190610498565b60405180910390a4505050565b6060816000036103065750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610330578061031a8161088c565b91506103299050600a836108bb565b915061030a565b60008167ffffffffffffffff81111561034b5761034b610527565b6040519080825280601f01601f191660200182016040528015610375576020820181803683370190505b5090505b84156103e05761038a6001836108cf565b9150610397600a866108e6565b6103a29060306108fa565b60f81b8183815181106103b7576103b76106b5565b60200101906001600160f81b031916908160001a9053506103d9600a866108bb565b9450610379565b949350505050565b80356001600160a01b03811681146103ff57600080fd5b919050565b60008060006060848603121561041957600080fd5b610422846103e8565b9250610430602085016103e8565b9150604084013590509250925092565b60005b8381101561045b578181015183820152602001610443565b838111156102545750506000910152565b60008151808452610484816020860160208601610440565b601f01601f19169290920160200192915050565b6020815260006104ab602083018461046c565b9392505050565b600080602083850312156104c557600080fd5b823567ffffffffffffffff808211156104dd57600080fd5b818501915085601f8301126104f157600080fd5b81358181111561050057600080fd5b8660208260051b850101111561051557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261054e57600080fd5b813567ffffffffffffffff8082111561056957610569610527565b604051601f8301601f19908116603f0116810190828211818310171561059157610591610527565b816040528381528660208588010111156105aa57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105df57600080fd5b6105e8846103e8565b925060208401359150604084013567ffffffffffffffff81111561060b57600080fd5b6106178682870161053d565b9150509250925092565b600181811c9082168061063557607f821691505b60208210810361065557634e487b7160e01b600052602260045260246000fd5b50919050565b6000845161066d818460208901610440565b8083019050601760f91b808252855161068d816001850160208a01610440565b600192019182015283516106a8816002840160208801610440565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126106e157600080fd5b9190910192915050565b6000606082360312156106fd57600080fd5b6040516060810167ffffffffffffffff828210818311171561072157610721610527565b8160405261072e856103e8565b835260208501356020840152604085013591508082111561074e57600080fd5b5061075b3682860161053d565b60408301525092915050565b601f8211156107b157600081815260208120601f850160051c8101602086101561078e5750805b601f850160051c820191505b818110156107ad5782815560010161079a565b5050505b505050565b815167ffffffffffffffff8111156107d0576107d0610527565b6107e4816107de8454610621565b84610767565b602080601f83116001811461081957600084156108015750858301515b600019600386901b1c1916600185901b1785556107ad565b600085815260208120601f198616915b8281101561084857888601518255948401946001909101908401610829565b50858210156108665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820161089e5761089e610876565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826108ca576108ca6108a5565b500490565b6000828210156108e1576108e1610876565b500390565b6000826108f5576108f56108a5565b500690565b6000821982111561090d5761090d610876565b50019056fea164736f6c634300080f000a",
    "sourceMap": "270:2154:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;793:85;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:372:57;;;:::i;2046:376:52:-;;;;;;:::i;:::-;;:::i;:::-;;1669:230;;;;;;:::i;:::-;;:::i;793:85::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;972:372:57:-;1012:13;1118:31;1135:13;1118:16;:31::i;:::-;1196;1213:13;1196:16;:31::i;:::-;1274;1291:13;1274:16;:31::i;:::-;1080:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1037:300;;972:372;:::o;2046:376:52:-;2140:13;2123:14;2170:246;2194:6;2190:1;:10;2170:246;;;2218:34;2255:13;;2269:1;2255:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2218:53;;;:::i;:::-;;;2286:59;2293:11;:17;;;2312:11;:15;;;2329:11;:15;;;2286:6;:59::i;:::-;-1:-1:-1;2388:3:52;;2170:246;;;;2113:309;2046:376;;:::o;1669:230::-;1794:10;1781:12;:24;;;;;;;;;;;-1:-1:-1;;;;;1781:32:52;;;;;;;;;:38;;;;;;;;:45;1822:4;1781:38;:45;:::i;:::-;;1881:4;1873:6;-1:-1:-1;;;;;1842:50:52;1861:10;-1:-1:-1;;;;;1842:50:52;;1887:4;1842:50;;;;;;:::i;:::-;;;;;;;;1669:230;;;:::o;392:703:76:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:76;;;;;;;;;;;;-1:-1:-1;;;691:10:76;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:76;;-1:-1:-1;837:2:76;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:76;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:76;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:76;;;;;;;;-1:-1:-1;1036:11:76;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:76:o;14:173:101:-;82:20;;-1:-1:-1;;;;;131:31:101;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;525:258::-;597:1;607:113;621:6;618:1;615:13;607:113;;;697:11;;;691:18;678:11;;;671:39;643:2;636:10;607:113;;;738:6;735:1;732:13;729:48;;;-1:-1:-1;;773:1:101;755:16;;748:27;525:258::o;788:257::-;829:3;867:5;861:12;894:6;889:3;882:19;910:63;966:6;959:4;954:3;950:14;943:4;936:5;932:16;910:63;:::i;:::-;1027:2;1006:15;-1:-1:-1;;1002:29:101;993:39;;;;1034:4;989:50;;788:257;-1:-1:-1;;788:257:101:o;1050:217::-;1197:2;1186:9;1179:21;1160:4;1217:44;1257:2;1246:9;1242:18;1234:6;1217:44;:::i;:::-;1209:52;1050:217;-1:-1:-1;;;1050:217:101:o;1496:651::-;1618:6;1626;1679:2;1667:9;1658:7;1654:23;1650:32;1647:52;;;1695:1;1692;1685:12;1647:52;1735:9;1722:23;1764:18;1805:2;1797:6;1794:14;1791:34;;;1821:1;1818;1811:12;1791:34;1859:6;1848:9;1844:22;1834:32;;1904:7;1897:4;1893:2;1889:13;1885:27;1875:55;;1926:1;1923;1916:12;1875:55;1966:2;1953:16;1992:2;1984:6;1981:14;1978:34;;;2008:1;2005;1998:12;1978:34;2061:7;2056:2;2046:6;2043:1;2039:14;2035:2;2031:23;2027:32;2024:45;2021:65;;;2082:1;2079;2072:12;2021:65;2113:2;2105:11;;;;;2135:6;;-1:-1:-1;1496:651:101;;-1:-1:-1;;;;1496:651:101:o;2152:127::-;2213:10;2208:3;2204:20;2201:1;2194:31;2244:4;2241:1;2234:15;2268:4;2265:1;2258:15;2284:718;2326:5;2379:3;2372:4;2364:6;2360:17;2356:27;2346:55;;2397:1;2394;2387:12;2346:55;2433:6;2420:20;2459:18;2496:2;2492;2489:10;2486:36;;;2502:18;;:::i;:::-;2577:2;2571:9;2545:2;2631:13;;-1:-1:-1;;2627:22:101;;;2651:2;2623:31;2619:40;2607:53;;;2675:18;;;2695:22;;;2672:46;2669:72;;;2721:18;;:::i;:::-;2761:10;2757:2;2750:22;2796:2;2788:6;2781:18;2842:3;2835:4;2830:2;2822:6;2818:15;2814:26;2811:35;2808:55;;;2859:1;2856;2849:12;2808:55;2923:2;2916:4;2908:6;2904:17;2897:4;2889:6;2885:17;2872:54;2970:1;2963:4;2958:2;2950:6;2946:15;2942:26;2935:37;2990:6;2981:15;;;;;;2284:718;;;;:::o;3007:462::-;3093:6;3101;3109;3162:2;3150:9;3141:7;3137:23;3133:32;3130:52;;;3178:1;3175;3168:12;3130:52;3201:29;3220:9;3201:29;:::i;:::-;3191:39;;3277:2;3266:9;3262:18;3249:32;3239:42;;3332:2;3321:9;3317:18;3304:32;3359:18;3351:6;3348:30;3345:50;;;3391:1;3388;3381:12;3345:50;3414:49;3455:7;3446:6;3435:9;3431:22;3414:49;:::i;:::-;3404:59;;;3007:462;;;;;:::o;3474:380::-;3553:1;3549:12;;;;3596;;;3617:61;;3671:4;3663:6;3659:17;3649:27;;3617:61;3724:2;3716:6;3713:14;3693:18;3690:38;3687:161;;3770:10;3765:3;3761:20;3758:1;3751:31;3805:4;3802:1;3795:15;3833:4;3830:1;3823:15;3687:161;;3474:380;;;:::o;3859:960::-;4288:3;4326:6;4320:13;4342:53;4388:6;4383:3;4376:4;4368:6;4364:17;4342:53;:::i;:::-;4426:6;4421:3;4417:16;4404:29;;-1:-1:-1;;;4478:2:101;4471:5;4464:17;4512:6;4506:13;4528:65;4584:8;4580:1;4573:5;4569:13;4562:4;4554:6;4550:17;4528:65;:::i;:::-;4656:1;4612:20;;4648:10;;;4641:22;4688:13;;4710:62;4688:13;4759:1;4751:10;;4744:4;4732:17;;4710:62;:::i;:::-;4792:17;4811:1;4788:25;;3859:960;-1:-1:-1;;;;;3859:960:101:o;4824:127::-;4885:10;4880:3;4876:20;4873:1;4866:31;4916:4;4913:1;4906:15;4940:4;4937:1;4930:15;4956:333;5058:4;5116:11;5103:25;5210:2;5206:7;5195:8;5179:14;5175:29;5171:43;5151:18;5147:68;5137:96;;5229:1;5226;5219:12;5137:96;5250:33;;;;;4956:333;-1:-1:-1;;4956:333:101:o;5294:752::-;5414:9;5473:4;5465:5;5449:14;5445:26;5441:37;5438:57;;;5491:1;5488;5481:12;5438:57;5524:2;5518:9;5566:4;5558:6;5554:17;5590:18;5658:6;5646:10;5643:22;5638:2;5626:10;5623:18;5620:46;5617:72;;;5669:18;;:::i;:::-;5709:10;5705:2;5698:22;5744:25;5763:5;5744:25;:::i;:::-;5736:6;5729:41;5827:2;5820:5;5816:14;5803:28;5798:2;5790:6;5786:15;5779:53;5879:2;5872:5;5868:14;5855:28;5841:42;;5906:2;5898:6;5895:14;5892:34;;;5922:1;5919;5912:12;5892:34;;5959:52;5996:14;5987:6;5980:5;5976:18;5959:52;:::i;:::-;5954:2;5942:15;;5935:77;-1:-1:-1;5946:6:101;5294:752;-1:-1:-1;;5294:752:101:o;6176:544::-;6277:2;6272:3;6269:11;6266:448;;;6313:1;6338:5;6334:2;6327:17;6383:4;6379:2;6369:19;6453:2;6441:10;6437:19;6434:1;6430:27;6424:4;6420:38;6489:4;6477:10;6474:20;6471:47;;;-1:-1:-1;6512:4:101;6471:47;6567:2;6562:3;6558:12;6555:1;6551:20;6545:4;6541:31;6531:41;;6622:82;6640:2;6633:5;6630:13;6622:82;;;6685:17;;;6666:1;6655:13;6622:82;;;6626:3;;;6266:448;6176:544;;;:::o;6896:1348::-;7020:3;7014:10;7047:18;7039:6;7036:30;7033:56;;;7069:18;;:::i;:::-;7098:96;7187:6;7147:38;7179:4;7173:11;7147:38;:::i;:::-;7141:4;7098:96;:::i;:::-;7249:4;;7313:2;7302:14;;7330:1;7325:662;;;;8031:1;8048:6;8045:89;;;-1:-1:-1;8100:19:101;;;8094:26;8045:89;-1:-1:-1;;6853:1:101;6849:11;;;6845:24;6841:29;6831:40;6877:1;6873:11;;;6828:57;8147:81;;7295:943;;7325:662;6123:1;6116:14;;;6160:4;6147:18;;-1:-1:-1;;7361:20:101;;;7478:236;7492:7;7489:1;7486:14;7478:236;;;7581:19;;;7575:26;7560:42;;7673:27;;;;7641:1;7629:14;;;;7508:19;;7478:236;;;7482:3;7742:6;7733:7;7730:19;7727:201;;;7803:19;;;7797:26;-1:-1:-1;;7886:1:101;7882:14;;;7898:3;7878:24;7874:37;7870:42;7855:58;7840:74;;7727:201;-1:-1:-1;;;;;7974:1:101;7958:14;;;7954:22;7941:36;;-1:-1:-1;6896:1348:101:o;8249:127::-;8310:10;8305:3;8301:20;8298:1;8291:31;8341:4;8338:1;8331:15;8365:4;8362:1;8355:15;8381:135;8420:3;8441:17;;;8438:43;;8461:18;;:::i;:::-;-1:-1:-1;8508:1:101;8497:13;;8381:135::o;8521:127::-;8582:10;8577:3;8573:20;8570:1;8563:31;8613:4;8610:1;8603:15;8637:4;8634:1;8627:15;8653:120;8693:1;8719;8709:35;;8724:18;;:::i;:::-;-1:-1:-1;8758:9:101;;8653:120::o;8778:125::-;8818:4;8846:1;8843;8840:8;8837:34;;;8851:18;;:::i;:::-;-1:-1:-1;8888:9:101;;8778:125::o;8908:112::-;8940:1;8966;8956:35;;8971:18;;:::i;:::-;-1:-1:-1;9005:9:101;;8908:112::o;9025:128::-;9065:3;9096:1;9092:6;9089:1;9086:13;9083:39;;;9102:18;;:::i;:::-;-1:-1:-1;9138:9:101;;9025:128::o",
    "linkReferences": {},
    "immutableReferences": {
      "39849": [
        {
          "start": 347,
          "length": 32
        }
      ],
      "39852": [
        {
          "start": 388,
          "length": 32
        }
      ],
      "39855": [
        {
          "start": 429,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "attest((address,bytes32,bytes)[])": "5eb5ea10",
    "attest(address,bytes32,bytes)": "702b9dee",
    "attestations(address,address,bytes32)": "29b42cb5",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"about\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"AttestationCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"about\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"internalType\":\"struct AttestationStation.AttestationData[]\",\"name\":\"_attestations\",\"type\":\"tuple[]\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_about\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_val\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"attestations\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Optimism CollectiveGitcoin\",\"events\":{\"AttestationCreated(address,address,bytes32,bytes)\":{\"params\":{\"about\":\"Address attestation is about.\",\"creator\":\"Address that made the attestation.\",\"key\":\"Key of the attestation.\",\"val\":\"Value of the attestation.\"}}},\"kind\":\"dev\",\"methods\":{\"attest((address,bytes32,bytes)[])\":{\"params\":{\"_attestations\":\"An array of AttestationData structs.\"}},\"attest(address,bytes32,bytes)\":{\"params\":{\"_about\":\"Address that the attestation is about.\",\"_key\":\"A key used to namespace the attestation.\",\"_val\":\"An arbitrary value stored as part of the attestation.\"}},\"constructor\":{\"custom:semver\":\"1.1.0\"},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"AttestationStation\",\"version\":1},\"userdoc\":{\"events\":{\"AttestationCreated(address,address,bytes32,bytes)\":{\"notice\":\"Emitted when Attestation is created.\"}},\"kind\":\"user\",\"methods\":{\"attest((address,bytes32,bytes)[])\":{\"notice\":\"Allows anyone to create attestations.\"},\"attest(address,bytes32,bytes)\":{\"notice\":\"Allows anyone to create an attestation.\"},\"attestations(address,address,bytes32)\":{\"notice\":\"Maps addresses to attestations. Creator => About => Key => Value.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"Where attestations live.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/universal/op-nft/AttestationStation.sol\":\"AttestationStation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds/=lib/multicall/lib/ds-test/src/\",\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":@std/=lib/multicall/lib/forge-std/src/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":multicall/=lib/multicall/\"]},\"sources\":{\"contracts/universal/op-nft/AttestationStation.sol\":{\"keccak256\":\"0x421923e04df145353db12cd0352ccf516d9c29ab64b138733b4f7a6a450ce2be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e83ce1f206042ec7611611a08970f07c7f83d734b3c544755449968a6b47fe0\",\"dweb:/ipfs/QmPW2Cc6BnDs5U82zWD9Ma8WHna8AJ99rtt5FU839sdFQo\"]},\"node_modules/@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "about",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationStation.AttestationData[]",
              "name": "_attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "about",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "val",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_about",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_val",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "attestations",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((address,bytes32,bytes)[])": {
            "params": {
              "_attestations": "An array of AttestationData structs."
            }
          },
          "attest(address,bytes32,bytes)": {
            "params": {
              "_about": "Address that the attestation is about.",
              "_key": "A key used to namespace the attestation.",
              "_val": "An arbitrary value stored as part of the attestation."
            }
          },
          "constructor": {
            "custom:semver": "1.1.0"
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((address,bytes32,bytes)[])": {
            "notice": "Allows anyone to create attestations."
          },
          "attest(address,bytes32,bytes)": {
            "notice": "Allows anyone to create an attestation."
          },
          "attestations(address,address,bytes32)": {
            "notice": "Maps addresses to attestations. Creator => About => Key => Value."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ds/=lib/multicall/lib/ds-test/src/",
        ":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":@std/=lib/multicall/lib/forge-std/src/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":multicall/=lib/multicall/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/universal/op-nft/AttestationStation.sol": "AttestationStation"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/universal/op-nft/AttestationStation.sol": {
        "keccak256": "0x421923e04df145353db12cd0352ccf516d9c29ab64b138733b4f7a6a450ce2be",
        "urls": [
          "bzz-raw://9e83ce1f206042ec7611611a08970f07c7f83d734b3c544755449968a6b47fe0",
          "dweb:/ipfs/QmPW2Cc6BnDs5U82zWD9Ma8WHna8AJ99rtt5FU839sdFQo"
        ],
        "license": "MIT"
      },
      "node_modules/@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/universal/op-nft/AttestationStation.sol",
    "id": 39073,
    "exportedSymbols": {
      "AttestationStation": [
        39072
      ],
      "Semver": [
        39907
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2393:52",
    "nodes": [
      {
        "id": 38956,
        "nodeType": "PragmaDirective",
        "src": "32:23:52",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 38958,
        "nodeType": "ImportDirective",
        "src": "57:88:52",
        "nodes": [],
        "absolutePath": "node_modules/@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol",
        "file": "@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39073,
        "sourceUnit": 39908,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38957,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39907,
              "src": "66:6:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39072,
        "nodeType": "ContractDefinition",
        "src": "270:2154:52",
        "nodes": [
          {
            "id": 38968,
            "nodeType": "StructDefinition",
            "src": "597:93:52",
            "nodes": [],
            "canonicalName": "AttestationStation.AttestationData",
            "members": [
              {
                "constant": false,
                "id": 38963,
                "mutability": "mutable",
                "name": "about",
                "nameLocation": "638:5:52",
                "nodeType": "VariableDeclaration",
                "scope": 38968,
                "src": "630:13:52",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 38962,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "630:7:52",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38965,
                "mutability": "mutable",
                "name": "key",
                "nameLocation": "661:3:52",
                "nodeType": "VariableDeclaration",
                "scope": 38968,
                "src": "653:11:52",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 38964,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "653:7:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38967,
                "mutability": "mutable",
                "name": "val",
                "nameLocation": "680:3:52",
                "nodeType": "VariableDeclaration",
                "scope": 38968,
                "src": "674:9:52",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 38966,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "674:5:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AttestationData",
            "nameLocation": "604:15:52",
            "scope": 39072,
            "visibility": "public"
          },
          {
            "id": 38977,
            "nodeType": "VariableDeclaration",
            "src": "793:85:52",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38969,
              "nodeType": "StructuredDocumentation",
              "src": "696:92:52",
              "text": " @notice Maps addresses to attestations. Creator => About => Key => Value."
            },
            "functionSelector": "29b42cb5",
            "mutability": "mutable",
            "name": "attestations",
            "nameLocation": "866:12:52",
            "scope": 39072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(bytes32 => bytes)))"
            },
            "typeName": {
              "id": 38976,
              "keyType": {
                "id": 38970,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "801:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "793:65:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(bytes32 => bytes)))"
              },
              "valueType": {
                "id": 38975,
                "keyType": {
                  "id": 38971,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "820:7:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "812:45:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                  "typeString": "mapping(address => mapping(bytes32 => bytes))"
                },
                "valueType": {
                  "id": 38974,
                  "keyType": {
                    "id": 38972,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "831:25:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                    "typeString": "mapping(bytes32 => bytes)"
                  },
                  "valueType": {
                    "id": 38973,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 38988,
            "nodeType": "EventDefinition",
            "src": "1163:143:52",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38978,
              "nodeType": "StructuredDocumentation",
              "src": "885:273:52",
              "text": " @notice Emitted when Attestation is created.\n @param creator Address that made the attestation.\n @param about   Address attestation is about.\n @param key     Key of the attestation.\n @param val     Value of the attestation."
            },
            "eventSelector": "28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85",
            "name": "AttestationCreated",
            "nameLocation": "1169:18:52",
            "parameters": {
              "id": 38987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38980,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1213:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 38988,
                  "src": "1197:23:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38982,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "about",
                  "nameLocation": "1246:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 38988,
                  "src": "1230:21:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38984,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "1277:3:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 38988,
                  "src": "1261:19:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38983,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38986,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "val",
                  "nameLocation": "1296:3:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 38988,
                  "src": "1290:9:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38985,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:118:52"
            }
          },
          {
            "id": 38998,
            "nodeType": "FunctionDefinition",
            "src": "1356:32:52",
            "nodes": [],
            "body": {
              "id": 38997,
              "nodeType": "Block",
              "src": "1386:2:52",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 38989,
              "nodeType": "StructuredDocumentation",
              "src": "1312:39:52",
              "text": " @custom:semver 1.1.0"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 38992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1377:1:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "31",
                    "id": 38993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1380:1:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "30",
                    "id": 38994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1383:1:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 38995,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38991,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39907,
                  "src": "1370:6:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "1370:15:52"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:2:52"
            },
            "returnParameters": {
              "id": 38996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:52"
            },
            "scope": 39072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39028,
            "nodeType": "FunctionDefinition",
            "src": "1669:230:52",
            "nodes": [],
            "body": {
              "id": 39027,
              "nodeType": "Block",
              "src": "1771:128:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 39008,
                            "name": "attestations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38977,
                            "src": "1781:12:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => bytes storage ref)))"
                            }
                          },
                          "id": 39013,
                          "indexExpression": {
                            "expression": {
                              "id": 39009,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1794:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 39010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1794:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1781:24:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                          }
                        },
                        "id": 39014,
                        "indexExpression": {
                          "id": 39011,
                          "name": "_about",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39001,
                          "src": "1806:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1781:32:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                          "typeString": "mapping(bytes32 => bytes storage ref)"
                        }
                      },
                      "id": 39015,
                      "indexExpression": {
                        "id": 39012,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39003,
                        "src": "1814:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1781:38:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39016,
                      "name": "_val",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39005,
                      "src": "1822:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1781:45:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 39018,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:45:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 39020,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1861:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1861:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 39022,
                        "name": "_about",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39001,
                        "src": "1873:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 39023,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39003,
                        "src": "1881:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 39024,
                        "name": "_val",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39005,
                        "src": "1887:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 39019,
                      "name": "AttestationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38988,
                      "src": "1842:18:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory)"
                      }
                    },
                    "id": 39025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:50:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39026,
                  "nodeType": "EmitStatement",
                  "src": "1837:55:52"
                }
              ]
            },
            "documentation": {
              "id": 38999,
              "nodeType": "StructuredDocumentation",
              "src": "1394:270:52",
              "text": " @notice Allows anyone to create an attestation.\n @param _about Address that the attestation is about.\n @param _key   A key used to namespace the attestation.\n @param _val   An arbitrary value stored as part of the attestation."
            },
            "functionSelector": "702b9dee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attest",
            "nameLocation": "1678:6:52",
            "parameters": {
              "id": 39006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39001,
                  "mutability": "mutable",
                  "name": "_about",
                  "nameLocation": "1702:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 39028,
                  "src": "1694:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39003,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "1726:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 39028,
                  "src": "1718:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39002,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39005,
                  "mutability": "mutable",
                  "name": "_val",
                  "nameLocation": "1753:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 39028,
                  "src": "1740:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39004,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1684:79:52"
            },
            "returnParameters": {
              "id": 39007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1771:0:52"
            },
            "scope": 39072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39071,
            "nodeType": "FunctionDefinition",
            "src": "2046:376:52",
            "nodes": [],
            "body": {
              "id": 39070,
              "nodeType": "Block",
              "src": "2113:309:52",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39037,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2131:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 39070,
                      "src": "2123:14:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2123:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39040,
                  "initialValue": {
                    "expression": {
                      "id": 39038,
                      "name": "_attestations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39033,
                      "src": "2140:13:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$38968_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct AttestationStation.AttestationData calldata[] calldata"
                      }
                    },
                    "id": 39039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2140:20:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2123:37:52"
                },
                {
                  "body": {
                    "id": 39068,
                    "nodeType": "Block",
                    "src": "2204:212:52",
                    "statements": [
                      {
                        "assignments": [
                          39050
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 39050,
                            "mutability": "mutable",
                            "name": "attestation",
                            "nameLocation": "2241:11:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 39068,
                            "src": "2218:34:52",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AttestationData_$38968_memory_ptr",
                              "typeString": "struct AttestationStation.AttestationData"
                            },
                            "typeName": {
                              "id": 39049,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 39048,
                                "name": "AttestationData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38968,
                                "src": "2218:15:52"
                              },
                              "referencedDeclaration": 38968,
                              "src": "2218:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$38968_storage_ptr",
                                "typeString": "struct AttestationStation.AttestationData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 39054,
                        "initialValue": {
                          "baseExpression": {
                            "id": 39051,
                            "name": "_attestations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39033,
                            "src": "2255:13:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AttestationData_$38968_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct AttestationStation.AttestationData calldata[] calldata"
                            }
                          },
                          "id": 39053,
                          "indexExpression": {
                            "id": 39052,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39042,
                            "src": "2269:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2255:16:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$38968_calldata_ptr",
                            "typeString": "struct AttestationStation.AttestationData calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2218:53:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 39056,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39050,
                                "src": "2293:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttestationData_$38968_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory"
                                }
                              },
                              "id": 39057,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "about",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38963,
                              "src": "2293:17:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 39058,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39050,
                                "src": "2312:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttestationData_$38968_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory"
                                }
                              },
                              "id": 39059,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "key",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38965,
                              "src": "2312:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 39060,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39050,
                                "src": "2329:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttestationData_$38968_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory"
                                }
                              },
                              "id": 39061,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "val",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38967,
                              "src": "2329:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 39055,
                            "name": "attest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39028,
                            "src": "2286:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes32,bytes memory)"
                            }
                          },
                          "id": 39062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2286:59:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39063,
                        "nodeType": "ExpressionStatement",
                        "src": "2286:59:52"
                      },
                      {
                        "id": 39067,
                        "nodeType": "UncheckedBlock",
                        "src": "2360:46:52",
                        "statements": [
                          {
                            "expression": {
                              "id": 39065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "2388:3:52",
                              "subExpression": {
                                "id": 39064,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39042,
                                "src": "2390:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 39066,
                            "nodeType": "ExpressionStatement",
                            "src": "2388:3:52"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39045,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39042,
                      "src": "2190:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 39046,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39037,
                      "src": "2194:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2190:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39069,
                  "initializationExpression": {
                    "assignments": [
                      39042
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 39042,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2183:1:52",
                        "nodeType": "VariableDeclaration",
                        "scope": 39069,
                        "src": "2175:9:52",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 39044,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 39043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2187:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2175:13:52"
                  },
                  "nodeType": "ForStatement",
                  "src": "2170:246:52"
                }
              ]
            },
            "documentation": {
              "id": 39029,
              "nodeType": "StructuredDocumentation",
              "src": "1905:136:52",
              "text": " @notice Allows anyone to create attestations.\n @param _attestations An array of AttestationData structs."
            },
            "functionSelector": "5eb5ea10",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attest",
            "nameLocation": "2055:6:52",
            "parameters": {
              "id": 39034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39033,
                  "mutability": "mutable",
                  "name": "_attestations",
                  "nameLocation": "2089:13:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 39071,
                  "src": "2062:40:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AttestationData_$38968_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct AttestationStation.AttestationData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39031,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 39030,
                        "name": "AttestationData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38968,
                        "src": "2062:15:52"
                      },
                      "referencedDeclaration": 38968,
                      "src": "2062:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$38968_storage_ptr",
                        "typeString": "struct AttestationStation.AttestationData"
                      }
                    },
                    "id": 39032,
                    "nodeType": "ArrayTypeName",
                    "src": "2062:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$38968_storage_$dyn_storage_ptr",
                      "typeString": "struct AttestationStation.AttestationData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2061:42:52"
            },
            "returnParameters": {
              "id": 39035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2113:0:52"
            },
            "scope": 39072,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38960,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39907,
              "src": "301:6:52"
            },
            "id": 38961,
            "nodeType": "InheritanceSpecifier",
            "src": "301:6:52"
          }
        ],
        "canonicalName": "AttestationStation",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38959,
          "nodeType": "StructuredDocumentation",
          "src": "147:122:52",
          "text": " @title AttestationStation\n @author Optimism Collective\n @author Gitcoin\n @notice Where attestations live."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39072,
          39907
        ],
        "name": "AttestationStation",
        "nameLocation": "279:18:52",
        "scope": 39073,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 52
}