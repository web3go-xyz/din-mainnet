{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "authModule",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "Drip",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFaucetAuthModule",
          "name": "_module",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ttl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Faucet.ModuleConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Faucet.DripParameters",
          "name": "_params",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "module",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "proof",
              "type": "bytes"
            }
          ],
          "internalType": "struct Faucet.AuthParameters",
          "name": "_auth",
          "type": "tuple"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFaucetAuthModule",
          "name": "",
          "type": "address"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ttl",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFaucetAuthModule",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "timeouts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610f2f380380610f2f83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610e9661009960003960008181610104015281816101ff01526107c20152610e966000f3fe6080604052600436106100745760003560e01c806338757bfd1161004e57806338757bfd1461013e578063a8ee49fe14610184578063b960bc2b146101b4578063f3fef3a3146101d457600080fd5b80631cb81b88146100805780631d5d26bc146100a25780632a0acc6a146100f257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461096d565b6101f4565b005b3480156100ae57600080fd5b506100dd6100bd366004610a2e565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b3480156100fe57600080fd5b506101267f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e9565b34801561014a57600080fd5b50610176610159366004610a50565b600160209081526000928352604080842090915290825290205481565b6040519081526020016100e9565b34801561019057600080fd5b506101a461019f366004610a7c565b6102a1565b6040516100e99493929190610af8565b3480156101c057600080fd5b506100a06101cf366004610b27565b610357565b3480156101e057600080fd5b506100a06101ef366004610a50565b6107b7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102455760405162461bcd60e51b815260040161023c90610c01565b60405180910390fd5b6001600160a01b03821660009081526020819052604090208151829190819061026e9082610cd6565b50602082015160018201805460ff1916911515919091179055604082015160028201556060909101516003909101555050565b6000602081905290815260409020805481906102bc90610c4d565b80601f01602080910402602001604051908101604052809291908181526020018280546102e890610c4d565b80156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505060018301546002840154600390940154929360ff9091169290915084565b80516001600160a01b031660009081526020819052604080822081516080810190925280548290829061038990610c4d565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590610c4d565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b5050509183525050600182015460ff161515602080830191909152600283015460408301526003909201546060909101528101519091506104ab5760405162461bcd60e51b815260206004820152603c60248201527f4661756365743a2070726f76696465642061757468206d6f64756c652069732060448201527f6e6f7420737570706f7274656420627920746869732066617563657400000000606482015260840161023c565b6020808301516000908152600282526040808220868401518352909252205460ff16156105265760405162461bcd60e51b815260206004820152602360248201527f4661756365743a206e6f6e63652068617320616c7265616479206265656e20756044820152621cd95960ea1b606482015260840161023c565b81516001600160a01b0316600090815260016020908152604080832082860151845290915290205442116105c25760405162461bcd60e51b815260206004820152603f60248201527f4661756365743a20617574682063616e6e6f742062652075736564207965742060448201527f626563617573652074696d656f757420686173206e6f7420656c617073656400606482015260840161023c565b815160208301516040808501519051637aa18ffd60e11b81526001600160a01b039093169263f5431ffa926105fb928892600401610d96565b602060405180830381865afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190610dd1565b6106b0576040805162461bcd60e51b81526020600482015260248101919091527f4661756365743a206472697020706172616d657465727320636f756c64206e6f60448201527f74206265207665726966696564206279207365637572697479206d6f64756c65606482015260840161023c565b60408101516106bf9042610dee565b82516001600160a01b0316600090815260016020818152604080842082880180518652908352818520959095559351835260028152838320878201518452905290829020805460ff1916909117905560608201518451915190919061072390610840565b6001600160a01b0390911681526020016040518091039082f0905080158015610750573d6000803e3d6000fd5b50508251602083015182516040516001600160a01b03909316926107749190610e14565b60405190819003812060608501518252907f2cebdf1cc706a50e1b28bf2fc5cfbd7204747a3b82439b85721a474df3a355a49060200160405180910390a4505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107ff5760405162461bcd60e51b815260040161023c90610c01565b808260405161080d90610840565b6001600160a01b0390911681526020016040518091039082f090508015801561083a573d6000803e3d6000fd5b50505050565b605980610e3183390190565b6001600160a01b038116811461086157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561089d5761089d610864565b60405290565b6040805190810167ffffffffffffffff8111828210171561089d5761089d610864565b6040516060810167ffffffffffffffff8111828210171561089d5761089d610864565b600067ffffffffffffffff8084111561090457610904610864565b604051601f8501601f19908116603f0116810190828211818310171561092c5761092c610864565b8160405280935085815286868601111561094557600080fd5b858560208301376000602087830101525050509392505050565b801515811461086157600080fd5b6000806040838503121561098057600080fd5b823561098b8161084c565b9150602083013567ffffffffffffffff808211156109a857600080fd5b90840190608082870312156109bc57600080fd5b6109c461087a565b8235828111156109d357600080fd5b83019150601f820187136109e657600080fd5b6109f5878335602085016108e9565b815260208301359150610a078261095f565b81602082015260408301356040820152606083013560608201528093505050509250929050565b60008060408385031215610a4157600080fd5b50508035926020909101359150565b60008060408385031215610a6357600080fd5b8235610a6e8161084c565b946020939093013593505050565b600060208284031215610a8e57600080fd5b8135610a998161084c565b9392505050565b60005b83811015610abb578181015183820152602001610aa3565b8381111561083a5750506000910152565b60008151808452610ae4816020860160208601610aa0565b601f01601f19169290920160200192915050565b608081526000610b0b6080830187610acc565b9415156020830152506040810192909252606090910152919050565b6000808284036060811215610b3b57600080fd5b6040811215610b4957600080fd5b50610b526108a3565b8335610b5d8161084c565b8152602084810135908201529150604083013567ffffffffffffffff80821115610b8657600080fd5b9084019060608287031215610b9a57600080fd5b610ba26108c6565b8235610bad8161084c565b815260208381013590820152604083013582811115610bcb57600080fd5b80840193505086601f840112610be057600080fd5b610bef878435602086016108e9565b60408201528093505050509250929050565b6020808252602c908201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60408201526b3632b210313c9030b236b4b760a11b606082015260800190565b600181811c90821680610c6157607f821691505b602082108103610c8157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610cd157600081815260208120601f850160051c81016020861015610cae5750805b601f850160051c820191505b81811015610ccd57828155600101610cba565b5050505b505050565b815167ffffffffffffffff811115610cf057610cf0610864565b610d0481610cfe8454610c4d565b84610c87565b602080601f831160018114610d395760008415610d215750858301515b600019600386901b1c1916600185901b178555610ccd565b600085815260208120601f198616915b82811015610d6857888601518255948401946001909101908401610d49565b5085821015610d865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60018060a01b03845116815260208401516020820152826040820152608060608201526000610dc86080830184610acc565b95945050505050565b600060208284031215610de357600080fd5b8151610a998161095f565b60008219821115610e0f57634e487b7160e01b600052601160045260246000fd5b500190565b60008251610e26818460208701610aa0565b919091019291505056fe608060405260405160593803806059833981016040819052601e91602a565b806001600160a01b0316ff5b600060208284031215603b57600080fd5b81516001600160a01b0381168114605157600080fd5b939250505056fea164736f6c634300080f000a",
    "sourceMap": "492:4573:49:-:0;;;2411:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2449:14:49;;;492:4573;;14:290:101;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:101;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:101:o;:::-;492:4573:49;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100745760003560e01c806338757bfd1161004e57806338757bfd1461013e578063a8ee49fe14610184578063b960bc2b146101b4578063f3fef3a3146101d457600080fd5b80631cb81b88146100805780631d5d26bc146100a25780632a0acc6a146100f257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461096d565b6101f4565b005b3480156100ae57600080fd5b506100dd6100bd366004610a2e565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b3480156100fe57600080fd5b506101267f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e9565b34801561014a57600080fd5b50610176610159366004610a50565b600160209081526000928352604080842090915290825290205481565b6040519081526020016100e9565b34801561019057600080fd5b506101a461019f366004610a7c565b6102a1565b6040516100e99493929190610af8565b3480156101c057600080fd5b506100a06101cf366004610b27565b610357565b3480156101e057600080fd5b506100a06101ef366004610a50565b6107b7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102455760405162461bcd60e51b815260040161023c90610c01565b60405180910390fd5b6001600160a01b03821660009081526020819052604090208151829190819061026e9082610cd6565b50602082015160018201805460ff1916911515919091179055604082015160028201556060909101516003909101555050565b6000602081905290815260409020805481906102bc90610c4d565b80601f01602080910402602001604051908101604052809291908181526020018280546102e890610c4d565b80156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505060018301546002840154600390940154929360ff9091169290915084565b80516001600160a01b031660009081526020819052604080822081516080810190925280548290829061038990610c4d565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590610c4d565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b5050509183525050600182015460ff161515602080830191909152600283015460408301526003909201546060909101528101519091506104ab5760405162461bcd60e51b815260206004820152603c60248201527f4661756365743a2070726f76696465642061757468206d6f64756c652069732060448201527f6e6f7420737570706f7274656420627920746869732066617563657400000000606482015260840161023c565b6020808301516000908152600282526040808220868401518352909252205460ff16156105265760405162461bcd60e51b815260206004820152602360248201527f4661756365743a206e6f6e63652068617320616c7265616479206265656e20756044820152621cd95960ea1b606482015260840161023c565b81516001600160a01b0316600090815260016020908152604080832082860151845290915290205442116105c25760405162461bcd60e51b815260206004820152603f60248201527f4661756365743a20617574682063616e6e6f742062652075736564207965742060448201527f626563617573652074696d656f757420686173206e6f7420656c617073656400606482015260840161023c565b815160208301516040808501519051637aa18ffd60e11b81526001600160a01b039093169263f5431ffa926105fb928892600401610d96565b602060405180830381865afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190610dd1565b6106b0576040805162461bcd60e51b81526020600482015260248101919091527f4661756365743a206472697020706172616d657465727320636f756c64206e6f60448201527f74206265207665726966696564206279207365637572697479206d6f64756c65606482015260840161023c565b60408101516106bf9042610dee565b82516001600160a01b0316600090815260016020818152604080842082880180518652908352818520959095559351835260028152838320878201518452905290829020805460ff1916909117905560608201518451915190919061072390610840565b6001600160a01b0390911681526020016040518091039082f0905080158015610750573d6000803e3d6000fd5b50508251602083015182516040516001600160a01b03909316926107749190610e14565b60405190819003812060608501518252907f2cebdf1cc706a50e1b28bf2fc5cfbd7204747a3b82439b85721a474df3a355a49060200160405180910390a4505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107ff5760405162461bcd60e51b815260040161023c90610c01565b808260405161080d90610840565b6001600160a01b0390911681526020016040518091039082f090508015801561083a573d6000803e3d6000fd5b50505050565b605980610e3183390190565b6001600160a01b038116811461086157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561089d5761089d610864565b60405290565b6040805190810167ffffffffffffffff8111828210171561089d5761089d610864565b6040516060810167ffffffffffffffff8111828210171561089d5761089d610864565b600067ffffffffffffffff8084111561090457610904610864565b604051601f8501601f19908116603f0116810190828211818310171561092c5761092c610864565b8160405280935085815286868601111561094557600080fd5b858560208301376000602087830101525050509392505050565b801515811461086157600080fd5b6000806040838503121561098057600080fd5b823561098b8161084c565b9150602083013567ffffffffffffffff808211156109a857600080fd5b90840190608082870312156109bc57600080fd5b6109c461087a565b8235828111156109d357600080fd5b83019150601f820187136109e657600080fd5b6109f5878335602085016108e9565b815260208301359150610a078261095f565b81602082015260408301356040820152606083013560608201528093505050509250929050565b60008060408385031215610a4157600080fd5b50508035926020909101359150565b60008060408385031215610a6357600080fd5b8235610a6e8161084c565b946020939093013593505050565b600060208284031215610a8e57600080fd5b8135610a998161084c565b9392505050565b60005b83811015610abb578181015183820152602001610aa3565b8381111561083a5750506000910152565b60008151808452610ae4816020860160208601610aa0565b601f01601f19169290920160200192915050565b608081526000610b0b6080830187610acc565b9415156020830152506040810192909252606090910152919050565b6000808284036060811215610b3b57600080fd5b6040811215610b4957600080fd5b50610b526108a3565b8335610b5d8161084c565b8152602084810135908201529150604083013567ffffffffffffffff80821115610b8657600080fd5b9084019060608287031215610b9a57600080fd5b610ba26108c6565b8235610bad8161084c565b815260208381013590820152604083013582811115610bcb57600080fd5b80840193505086601f840112610be057600080fd5b610bef878435602086016108e9565b60408201528093505050509250929050565b6020808252602c908201527f4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c60408201526b3632b210313c9030b236b4b760a11b606082015260800190565b600181811c90821680610c6157607f821691505b602082108103610c8157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610cd157600081815260208120601f850160051c81016020861015610cae5750805b601f850160051c820191505b81811015610ccd57828155600101610cba565b5050505b505050565b815167ffffffffffffffff811115610cf057610cf0610864565b610d0481610cfe8454610c4d565b84610c87565b602080601f831160018114610d395760008415610d215750858301515b600019600386901b1c1916600185901b178555610ccd565b600085815260208120601f198616915b82811015610d6857888601518255948401946001909101908401610d49565b5085821015610d865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60018060a01b03845116815260208401516020820152826040820152608060608201526000610dc86080830184610acc565b95945050505050565b600060208284031215610de357600080fd5b8151610a998161095f565b60008219821115610e0f57634e487b7160e01b600052601160045260246000fd5b500190565b60008251610e26818460208701610aa0565b919091019291505056fe608060405260405160593803806059833981016040819052601e91602a565b806001600160a01b0316ff5b600060208284031215603b57600080fd5b81516001600160a01b0381168114605157600080fd5b939250505056fea164736f6c634300080f000a",
    "sourceMap": "492:4573:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:137;;;;;;;;;;-1:-1:-1;3160:137:49;;;;;:::i;:::-;;:::i;:::-;;2050:58;;;;;;;;;;-1:-1:-1;2050:58:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3436:14:101;;3429:22;3411:41;;3399:2;3384:18;2050:58:49;;;;;;;;1576:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3627:32:101;;;3609:51;;3597:2;3582:18;1576:30:49;3463:203:101;1877:73:49;;;;;;;;;;-1:-1:-1;1877:73:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4183:25:101;;;4171:2;4156:18;1877:73:49;4037:177:101;1703:57:49;;;;;;;;;;-1:-1:-1;1703:57:49;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3463:1600::-;;;;;;;;;;-1:-1:-1;3463:1600:49;;;;;:::i;:::-;;:::i;2802:141::-;;;;;;;;;;-1:-1:-1;2802:141:49;;;;;:::i;:::-;;:::i;3160:137::-;2237:10;-1:-1:-1;;;;;2251:5:49;2237:19;;2229:76;;;;-1:-1:-1;;;2229:76:49;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3264:16:49;::::1;:7;:16:::0;;;::::1;::::0;;;;;;:26;;3283:7;;3264:16;;;:26:::1;::::0;:16;:26:::1;:::i;:::-;-1:-1:-1::0;3264:26:49::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;3264:26:49::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;3160:137:49:o;1703:57::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1703:57:49;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1703:57:49;:::o;3463:1600::-;3631:12;;-1:-1:-1;;;;;3623:21:49;3594:26;3623:21;;;;;;;;;;;3594:50;;;;;;;;;;;;3623:21;;3594:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3594:50:49;;;-1:-1:-1;;3594:50:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3725:14;;;3594:50;;-1:-1:-1;3717:87:49;;;;-1:-1:-1;;;3717:87:49;;10406:2:101;3717:87:49;;;10388:21:101;10445:2;10425:18;;;10418:30;10484:34;10464:18;;;10457:62;10555:30;10535:18;;;10528:58;10603:19;;3717:87:49;10204:424:101;3717:87:49;4126:8;;;;;4119:16;;;;:6;:16;;;;;;4136:13;;;;4119:31;;;;;;;;;:40;4111:88;;;;-1:-1:-1;;;4111:88:49;;10835:2:101;4111:88:49;;;10817:21:101;10874:2;10854:18;;;10847:30;10913:34;10893:18;;;10886:62;-1:-1:-1;;;10964:18:101;;;10957:33;11007:19;;4111:88:49;10633:399:101;4111:88:49;4286:12;;-1:-1:-1;;;;;4277:22:49;;;;;:8;:22;;;;;;;;4300:8;;;;4277:32;;;;;;;;4312:15;-1:-1:-1;4256:160:49;;;;-1:-1:-1;;;4256:160:49;;11239:2:101;4256:160:49;;;11221:21:101;11278:2;11258:18;;;11251:30;11317:34;11297:18;;;11290:62;11388:33;11368:18;;;11361:61;11439:19;;4256:160:49;11037:427:101;4256:160:49;4477:12;;4506:8;;;;4516:11;;;;;4477:51;;-1:-1:-1;;;4477:51:49;;-1:-1:-1;;;;;4477:19:49;;;;;;:51;;4497:7;;4477:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4456:162;;;;;-1:-1:-1;;;4456:162:49;;12450:2:101;4456:162:49;;;12432:21:101;12469:18;;;12462:30;;;;12528:34;12508:18;;;12501:62;12599:34;12579:18;;;12572:62;12651:19;;4456:162:49;12248:428:101;4456:162:49;4751:10;;;;4733:28;;:15;:28;:::i;:::-;4707:12;;-1:-1:-1;;;;;4698:22:49;;;;;:8;:22;;;;;;;;4721:8;;;;;4698:32;;;;;;;;:63;;;;4814:8;;4807:16;;:6;:16;;;;;4824:13;;;;4807:31;;;;;;;;:38;;-1:-1:-1;;4807:38:49;;;;;;4945:13;;;;4961:17;;4924:55;;4945:13;;4961:17;4924:55;;;:::i;:::-;-1:-1:-1;;;;;3627:32:101;;;3609:51;;3597:2;3582:18;4924:55:49;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5038:17:49;;5013:8;;;;5000:11;;4995:61;;-1:-1:-1;;;;;4995:61:49;;;;;;5000:11;4995:61;:::i;:::-;;;;;;;;;5023:13;;;;4183:25:101;;4995:61:49;;;4171:2:101;4156:18;4995:61:49;;;;;;;3544:1519;3463:1600;;:::o;2802:141::-;2237:10;-1:-1:-1;;;;;2251:5:49;2237:19;;2229:76;;;;-1:-1:-1;;;2229:76:49;;;;;;;:::i;:::-;2915:7:::1;2925:10;2894:42;;;;;:::i;:::-;-1:-1:-1::0;;;;;3627:32:101;;;3609:51;;3597:2;3582:18;2894:42:49::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;2802:141:::0;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:150:101:-;-1:-1:-1;;;;;108:31:101;;98:42;;88:70;;154:1;151;144:12;88:70;14:150;:::o;169:127::-;230:10;225:3;221:20;218:1;211:31;261:4;258:1;251:15;285:4;282:1;275:15;301:253;373:2;367:9;415:4;403:17;;450:18;435:34;;471:22;;;432:62;429:88;;;497:18;;:::i;:::-;533:2;526:22;301:253;:::o;559:252::-;626:4;620:11;;;658:17;;705:18;690:34;;726:22;;;687:62;684:88;;;752:18;;:::i;816:251::-;888:2;882:9;930:2;918:15;;963:18;948:34;;984:22;;;945:62;942:88;;;1010:18;;:::i;1072:632::-;1137:5;1167:18;1208:2;1200:6;1197:14;1194:40;;;1214:18;;:::i;:::-;1289:2;1283:9;1257:2;1343:15;;-1:-1:-1;;1339:24:101;;;1365:2;1335:33;1331:42;1319:55;;;1389:18;;;1409:22;;;1386:46;1383:72;;;1435:18;;:::i;:::-;1475:10;1471:2;1464:22;1504:6;1495:15;;1534:6;1526;1519:22;1574:3;1565:6;1560:3;1556:16;1553:25;1550:45;;;1591:1;1588;1581:12;1550:45;1641:6;1636:3;1629:4;1621:6;1617:17;1604:44;1696:1;1689:4;1680:6;1672;1668:19;1664:30;1657:41;;;;1072:632;;;;;:::o;1709:118::-;1795:5;1788:13;1781:21;1774:5;1771:32;1761:60;;1817:1;1814;1807:12;1832:1181;1958:6;1966;2019:2;2007:9;1998:7;1994:23;1990:32;1987:52;;;2035:1;2032;2025:12;1987:52;2074:9;2061:23;2093:50;2137:5;2093:50;:::i;:::-;2162:5;-1:-1:-1;2218:2:101;2203:18;;2190:32;2241:18;2271:14;;;2268:34;;;2298:1;2295;2288:12;2268:34;2321:22;;;;2377:4;2359:16;;;2355:27;2352:47;;;2395:1;2392;2385:12;2352:47;2423:22;;:::i;:::-;2483:2;2470:16;2511:2;2501:8;2498:16;2495:36;;;2527:1;2524;2517:12;2495:36;2550:17;;;-1:-1:-1;2598:4:101;2590:13;;2586:27;-1:-1:-1;2576:55:101;;2627:1;2624;2617:12;2576:55;2656:74;2722:7;2717:2;2704:16;2699:2;2695;2691:11;2656:74;:::i;:::-;2647:7;2640:91;2776:2;2772;2768:11;2755:25;2740:40;;2789:30;2811:7;2789:30;:::i;:::-;2853:7;2848:2;2839:7;2835:16;2828:33;2916:2;2912;2908:11;2895:25;2890:2;2881:7;2877:16;2870:51;2976:2;2972;2968:11;2955:25;2950:2;2941:7;2937:16;2930:51;3000:7;2990:17;;;;;1832:1181;;;;;:::o;3018:248::-;3086:6;3094;3147:2;3135:9;3126:7;3122:23;3118:32;3115:52;;;3163:1;3160;3153:12;3115:52;-1:-1:-1;;3186:23:101;;;3256:2;3241:18;;;3228:32;;-1:-1:-1;3018:248:101:o;3671:361::-;3766:6;3774;3827:2;3815:9;3806:7;3802:23;3798:32;3795:52;;;3843:1;3840;3833:12;3795:52;3882:9;3869:23;3901:50;3945:5;3901:50;:::i;:::-;3970:5;4022:2;4007:18;;;;3994:32;;-1:-1:-1;;;3671:361:101:o;4219:293::-;4305:6;4358:2;4346:9;4337:7;4333:23;4329:32;4326:52;;;4374:1;4371;4364:12;4326:52;4413:9;4400:23;4432:50;4476:5;4432:50;:::i;:::-;4501:5;4219:293;-1:-1:-1;;;4219:293:101:o;4517:258::-;4589:1;4599:113;4613:6;4610:1;4607:13;4599:113;;;4689:11;;;4683:18;4670:11;;;4663:39;4635:2;4628:10;4599:113;;;4730:6;4727:1;4724:13;4721:48;;;-1:-1:-1;;4765:1:101;4747:16;;4740:27;4517:258::o;4780:::-;4822:3;4860:5;4854:12;4887:6;4882:3;4875:19;4903:63;4959:6;4952:4;4947:3;4943:14;4936:4;4929:5;4925:16;4903:63;:::i;:::-;5020:2;4999:15;-1:-1:-1;;4995:29:101;4986:39;;;;5027:4;4982:50;;4780:258;-1:-1:-1;;4780:258:101:o;5043:445::-;5270:3;5259:9;5252:22;5233:4;5291:46;5332:3;5321:9;5317:19;5309:6;5291:46;:::i;:::-;5380:14;;5373:22;5368:2;5353:18;;5346:50;-1:-1:-1;5427:2:101;5412:18;;5405:34;;;;5470:2;5455:18;;;5448:34;5283:54;5043:445;-1:-1:-1;5043:445:101:o;5493:1357::-;5627:6;5635;5679:9;5670:7;5666:23;5709:2;5705;5701:11;5698:31;;;5725:1;5722;5715:12;5698:31;5749:4;5745:2;5741:13;5738:33;;;5767:1;5764;5757:12;5738:33;;5793:17;;:::i;:::-;5847:9;5834:23;5866:52;5910:7;5866:52;:::i;:::-;5927:22;;6009:2;5994:18;;;5981:32;5965:14;;;5958:56;5934:5;-1:-1:-1;6089:4:101;6074:20;;6061:34;6114:18;6144:14;;;6141:34;;;6171:1;6168;6161:12;6141:34;6194:22;;;;6250:2;6232:16;;;6228:25;6225:45;;;6266:1;6263;6256:12;6225:45;6294:22;;:::i;:::-;6353:2;6340:16;6365:52;6409:7;6365:52;:::i;:::-;6426:24;;6505:2;6497:11;;;6484:25;6466:16;;;6459:51;6556:4;6548:13;;6535:27;6574:16;;;6571:36;;;6603:1;6600;6593:12;6571:36;6634:8;6630:2;6626:17;6616:27;;;6681:7;6674:4;6670:2;6666:13;6662:27;6652:55;;6703:1;6700;6693:12;6652:55;6743:74;6809:7;6804:2;6791:16;6786:2;6782;6778:11;6743:74;:::i;:::-;6736:4;6727:7;6723:18;6716:102;6837:7;6827:17;;;;;5493:1357;;;;;:::o;7202:408::-;7404:2;7386:21;;;7443:2;7423:18;;;7416:30;7482:34;7477:2;7462:18;;7455:62;-1:-1:-1;;;7548:2:101;7533:18;;7526:42;7600:3;7585:19;;7202:408::o;7615:380::-;7694:1;7690:12;;;;7737;;;7758:61;;7812:4;7804:6;7800:17;7790:27;;7758:61;7865:2;7857:6;7854:14;7834:18;7831:38;7828:161;;7911:10;7906:3;7902:20;7899:1;7892:31;7946:4;7943:1;7936:15;7974:4;7971:1;7964:15;7828:161;;7615:380;;;:::o;8126:545::-;8228:2;8223:3;8220:11;8217:448;;;8264:1;8289:5;8285:2;8278:17;8334:4;8330:2;8320:19;8404:2;8392:10;8388:19;8385:1;8381:27;8375:4;8371:38;8440:4;8428:10;8425:20;8422:47;;;-1:-1:-1;8463:4:101;8422:47;8518:2;8513:3;8509:12;8506:1;8502:20;8496:4;8492:31;8482:41;;8573:82;8591:2;8584:5;8581:13;8573:82;;;8636:17;;;8617:1;8606:13;8573:82;;;8577:3;;;8217:448;8126:545;;;:::o;8847:1352::-;8973:3;8967:10;9000:18;8992:6;8989:30;8986:56;;;9022:18;;:::i;:::-;9051:97;9141:6;9101:38;9133:4;9127:11;9101:38;:::i;:::-;9095:4;9051:97;:::i;:::-;9203:4;;9267:2;9256:14;;9284:1;9279:663;;;;9986:1;10003:6;10000:89;;;-1:-1:-1;10055:19:101;;;10049:26;10000:89;-1:-1:-1;;8804:1:101;8800:11;;;8796:24;8792:29;8782:40;8828:1;8824:11;;;8779:57;10102:81;;9249:944;;9279:663;8073:1;8066:14;;;8110:4;8097:18;;-1:-1:-1;;9315:20:101;;;9433:236;9447:7;9444:1;9441:14;9433:236;;;9536:19;;;9530:26;9515:42;;9628:27;;;;9596:1;9584:14;;;;9463:19;;9433:236;;;9437:3;9697:6;9688:7;9685:19;9682:201;;;9758:19;;;9752:26;-1:-1:-1;;9841:1:101;9837:14;;;9853:3;9833:24;9829:37;9825:42;9810:58;9795:74;;9682:201;-1:-1:-1;;;;;9929:1:101;9913:14;;;9909:22;9896:36;;-1:-1:-1;8847:1352:101:o;11469:524::-;11774:1;11770;11765:3;11761:11;11757:19;11748:6;11742:13;11738:39;11727:9;11720:58;11834:4;11826:6;11822:17;11816:24;11809:4;11798:9;11794:20;11787:54;11877:6;11872:2;11861:9;11857:18;11850:34;11920:3;11915:2;11904:9;11900:18;11893:31;11701:4;11941:46;11982:3;11971:9;11967:19;11959:6;11941:46;:::i;:::-;11933:54;11469:524;-1:-1:-1;;;;;11469:524:101:o;11998:245::-;12065:6;12118:2;12106:9;12097:7;12093:23;12089:32;12086:52;;;12134:1;12131;12124:12;12086:52;12166:9;12160:16;12185:28;12207:5;12185:28;:::i;12681:225::-;12721:3;12752:1;12748:6;12745:1;12742:13;12739:136;;;12797:10;12792:3;12788:20;12785:1;12778:31;12832:4;12829:1;12822:15;12860:4;12857:1;12850:15;12739:136;-1:-1:-1;12891:9:101;;12681:225::o;13135:276::-;13266:3;13304:6;13298:13;13320:53;13366:6;13361:3;13354:4;13346:6;13342:17;13320:53;:::i;:::-;13389:16;;;;;13135:276;-1:-1:-1;;13135:276:101:o",
    "linkReferences": {},
    "immutableReferences": {
      "38651": [
        {
          "start": 260,
          "length": 32
        },
        {
          "start": 511,
          "length": 32
        },
        {
          "start": 1986,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADMIN()": "2a0acc6a",
    "configure(address,(string,bool,uint256,uint256))": "1cb81b88",
    "drip((address,bytes32),(address,bytes32,bytes))": "b960bc2b",
    "modules(address)": "a8ee49fe",
    "nonces(bytes32,bytes32)": "1d5d26bc",
    "timeouts(address,bytes32)": "38757bfd",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"authModule\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Drip\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"_module\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Faucet.ModuleConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct Faucet.DripParameters\",\"name\":\"_params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct Faucet.AuthParameters\",\"name\":\"_auth\",\"type\":\"tuple\"}],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFaucetAuthModule\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"timeouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Drip(string,bytes32,uint256,address)\":{\"params\":{\"amount\":\"The amount of funds sent.\",\"authModule\":\"The type of authentication that was used for verifying the drip.\",\"recipient\":\"The recipient of the drip.\",\"userId\":\"The id of the user that requested the drip.\"}}},\"kind\":\"dev\",\"methods\":{\"configure(address,(string,bool,uint256,uint256))\":{\"params\":{\"_config\":\"Configuration to set for the module.\",\"_module\":\"Authentication module to configure.\"}},\"constructor\":{\"params\":{\"_admin\":\"Admin address that can configure the faucet.\"}},\"drip((address,bytes32),(address,bytes32,bytes))\":{\"params\":{\"_auth\":\"Authentication parameters.\",\"_params\":\"Drip parameters.\"}},\"withdraw(address,uint256)\":{\"params\":{\"_amount\":\"Amount of ETH in wei to withdraw.\",\"_recipient\":\"Address to receive the funds.\"}}},\"title\":\"Faucet\",\"version\":1},\"userdoc\":{\"events\":{\"Drip(string,bytes32,uint256,address)\":{\"notice\":\"Emitted on each drip.\"}},\"kind\":\"user\",\"methods\":{\"ADMIN()\":{\"notice\":\"Admin address that can configure the faucet.\"},\"configure(address,(string,bool,uint256,uint256))\":{\"notice\":\"Allows the admin to configure an authentication module.\"},\"drip((address,bytes32),(address,bytes32,bytes))\":{\"notice\":\"Drips ETH to a recipient account.\"},\"modules(address)\":{\"notice\":\"Mapping of authentication modules to their configurations.\"},\"nonces(bytes32,bytes32)\":{\"notice\":\"Maps from id to nonces to whether or not they have been used.\"},\"timeouts(address,bytes32)\":{\"notice\":\"Mapping of authentication IDs to the next timestamp at which they can be used.\"},\"withdraw(address,uint256)\":{\"notice\":\"Allows the admin to withdraw funds.\"}},\"notice\":\"Faucet contract that drips ETH to users.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/universal/faucet/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds/=lib/multicall/lib/ds-test/src/\",\":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":@std/=lib/multicall/lib/forge-std/src/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":multicall/=lib/multicall/\"]},\"sources\":{\"contracts/universal/faucet/Faucet.sol\":{\"keccak256\":\"0x0df3b36eae1b8593259f7c96d0c11164b92ea6d03a379c96e13b851c9142fcc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3594bcb5373ccd847c64e1ae1d7e3f5db656d09746a4712e4e0bbbc2abfe2eaf\",\"dweb:/ipfs/QmQgVTGXHHh7Yxn41GvSFppG1yk4wKwsfrzjs74rZomVto\"]},\"contracts/universal/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x8d957f6f57a7ffdbb89ea3405bedaca9462a15c13767c9b6025b02923d9af792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fd6798f85729c64f9b93519ccdf707b1dc0d51a319cf07bb884542a3d3a6d69\",\"dweb:/ipfs/QmYkmf59sFtzRMz9qYyuU1A3fBEypFbhKwaegNLjRLrpwW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "authModule",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "userId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Drip",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "_module",
              "type": "address"
            },
            {
              "internalType": "struct Faucet.ModuleConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ttl",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configure"
        },
        {
          "inputs": [
            {
              "internalType": "struct Faucet.DripParameters",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct Faucet.AuthParameters",
              "name": "_auth",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IFaucetAuthModule",
                  "name": "module",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "proof",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "drip"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "modules",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ttl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IFaucetAuthModule",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "timeouts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "configure(address,(string,bool,uint256,uint256))": {
            "params": {
              "_config": "Configuration to set for the module.",
              "_module": "Authentication module to configure."
            }
          },
          "constructor": {
            "params": {
              "_admin": "Admin address that can configure the faucet."
            }
          },
          "drip((address,bytes32),(address,bytes32,bytes))": {
            "params": {
              "_auth": "Authentication parameters.",
              "_params": "Drip parameters."
            }
          },
          "withdraw(address,uint256)": {
            "params": {
              "_amount": "Amount of ETH in wei to withdraw.",
              "_recipient": "Address to receive the funds."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ADMIN()": {
            "notice": "Admin address that can configure the faucet."
          },
          "configure(address,(string,bool,uint256,uint256))": {
            "notice": "Allows the admin to configure an authentication module."
          },
          "drip((address,bytes32),(address,bytes32,bytes))": {
            "notice": "Drips ETH to a recipient account."
          },
          "modules(address)": {
            "notice": "Mapping of authentication modules to their configurations."
          },
          "nonces(bytes32,bytes32)": {
            "notice": "Maps from id to nonces to whether or not they have been used."
          },
          "timeouts(address,bytes32)": {
            "notice": "Mapping of authentication IDs to the next timestamp at which they can be used."
          },
          "withdraw(address,uint256)": {
            "notice": "Allows the admin to withdraw funds."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ds/=lib/multicall/lib/ds-test/src/",
        ":@eth-optimism/contracts-bedrock/=node_modules/@eth-optimism/contracts-bedrock/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":@std/=lib/multicall/lib/forge-std/src/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":multicall/=lib/multicall/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/universal/faucet/Faucet.sol": "Faucet"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/universal/faucet/Faucet.sol": {
        "keccak256": "0x0df3b36eae1b8593259f7c96d0c11164b92ea6d03a379c96e13b851c9142fcc5",
        "urls": [
          "bzz-raw://3594bcb5373ccd847c64e1ae1d7e3f5db656d09746a4712e4e0bbbc2abfe2eaf",
          "dweb:/ipfs/QmQgVTGXHHh7Yxn41GvSFppG1yk4wKwsfrzjs74rZomVto"
        ],
        "license": "MIT"
      },
      "contracts/universal/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x8d957f6f57a7ffdbb89ea3405bedaca9462a15c13767c9b6025b02923d9af792",
        "urls": [
          "bzz-raw://0fd6798f85729c64f9b93519ccdf707b1dc0d51a319cf07bb884542a3d3a6d69",
          "dweb:/ipfs/QmYkmf59sFtzRMz9qYyuU1A3fBEypFbhKwaegNLjRLrpwW"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/universal/faucet/Faucet.sol",
    "id": 38852,
    "exportedSymbols": {
      "Faucet": [
        38851
      ],
      "IFaucetAuthModule": [
        38954
      ],
      "SafeSend": [
        38614
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5034:49",
    "nodes": [
      {
        "id": 38599,
        "nodeType": "PragmaDirective",
        "src": "32:23:49",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 38601,
        "nodeType": "ImportDirective",
        "src": "57:72:49",
        "nodes": [],
        "absolutePath": "contracts/universal/faucet/authmodules/IFaucetAuthModule.sol",
        "file": "./authmodules/IFaucetAuthModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38852,
        "sourceUnit": 38955,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38600,
              "name": "IFaucetAuthModule",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38954,
              "src": "66:17:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38614,
        "nodeType": "ContractDefinition",
        "src": "232:180:49",
        "nodes": [
          {
            "id": 38613,
            "nodeType": "FunctionDefinition",
            "src": "321:89:49",
            "nodes": [],
            "body": {
              "id": 38612,
              "nodeType": "Block",
              "src": "369:41:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38609,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38605,
                        "src": "392:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 38608,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "379:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 38610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "379:24:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38611,
                  "nodeType": "ExpressionStatement",
                  "src": "379:24:49"
                }
              ]
            },
            "documentation": {
              "id": 38603,
              "nodeType": "StructuredDocumentation",
              "src": "256:60:49",
              "text": " @param _recipient Account to send ETH to."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38605,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "349:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38613,
                  "src": "333:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 38604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:15:49",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "332:28:49"
            },
            "returnParameters": {
              "id": 38607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:49"
            },
            "scope": 38614,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeSend",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38602,
          "nodeType": "StructuredDocumentation",
          "src": "131:100:49",
          "text": " @title  SafeSend\n @notice Sends ETH to a recipient account without triggering any code."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38614
        ],
        "name": "SafeSend",
        "nameLocation": "241:8:49",
        "scope": 38852,
        "usedErrors": []
      },
      {
        "id": 38851,
        "nodeType": "ContractDefinition",
        "src": "492:4573:49",
        "nodes": [
          {
            "id": 38626,
            "nodeType": "EventDefinition",
            "src": "836:143:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38616,
              "nodeType": "StructuredDocumentation",
              "src": "514:317:49",
              "text": " @notice Emitted on each drip.\n @param authModule The type of authentication that was used for verifying the drip.\n @param userId     The id of the user that requested the drip.\n @param amount     The amount of funds sent.\n @param recipient  The recipient of the drip."
            },
            "eventSelector": "2cebdf1cc706a50e1b28bf2fc5cfbd7204747a3b82439b85721a474df3a355a4",
            "name": "Drip",
            "nameLocation": "842:4:49",
            "parameters": {
              "id": 38625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38618,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "authModule",
                  "nameLocation": "871:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38626,
                  "src": "856:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38617,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38620,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userId",
                  "nameLocation": "907:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38626,
                  "src": "891:22:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38619,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38622,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "931:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38626,
                  "src": "923:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38624,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "963:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38626,
                  "src": "947:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:132:49"
            }
          },
          {
            "id": 38631,
            "nodeType": "StructDefinition",
            "src": "1039:87:49",
            "nodes": [],
            "canonicalName": "Faucet.DripParameters",
            "members": [
              {
                "constant": false,
                "id": 38628,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "1087:9:49",
                "nodeType": "VariableDeclaration",
                "scope": 38631,
                "src": "1071:25:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 38627,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1071:15:49",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38630,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "1114:5:49",
                "nodeType": "VariableDeclaration",
                "scope": 38631,
                "src": "1106:13:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 38629,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1106:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripParameters",
            "nameLocation": "1046:14:49",
            "scope": 38851,
            "visibility": "public"
          },
          {
            "id": 38639,
            "nodeType": "StructDefinition",
            "src": "1194:104:49",
            "nodes": [],
            "canonicalName": "Faucet.AuthParameters",
            "members": [
              {
                "constant": false,
                "id": 38634,
                "mutability": "mutable",
                "name": "module",
                "nameLocation": "1244:6:49",
                "nodeType": "VariableDeclaration",
                "scope": 38639,
                "src": "1226:24:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                  "typeString": "contract IFaucetAuthModule"
                },
                "typeName": {
                  "id": 38633,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 38632,
                    "name": "IFaucetAuthModule",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 38954,
                    "src": "1226:17:49"
                  },
                  "referencedDeclaration": 38954,
                  "src": "1226:17:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                    "typeString": "contract IFaucetAuthModule"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38636,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1268:2:49",
                "nodeType": "VariableDeclaration",
                "scope": 38639,
                "src": "1260:10:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 38635,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1260:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38638,
                "mutability": "mutable",
                "name": "proof",
                "nameLocation": "1286:5:49",
                "nodeType": "VariableDeclaration",
                "scope": 38639,
                "src": "1280:11:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 38637,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:5:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AuthParameters",
            "nameLocation": "1201:14:49",
            "scope": 38851,
            "visibility": "public"
          },
          {
            "id": 38648,
            "nodeType": "StructDefinition",
            "src": "1379:115:49",
            "nodes": [],
            "canonicalName": "Faucet.ModuleConfig",
            "members": [
              {
                "constant": false,
                "id": 38641,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1416:4:49",
                "nodeType": "VariableDeclaration",
                "scope": 38648,
                "src": "1409:11:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 38640,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1409:6:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38643,
                "mutability": "mutable",
                "name": "enabled",
                "nameLocation": "1435:7:49",
                "nodeType": "VariableDeclaration",
                "scope": 38648,
                "src": "1430:12:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 38642,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1430:4:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38645,
                "mutability": "mutable",
                "name": "ttl",
                "nameLocation": "1460:3:49",
                "nodeType": "VariableDeclaration",
                "scope": 38648,
                "src": "1452:11:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38644,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1452:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38647,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1481:6:49",
                "nodeType": "VariableDeclaration",
                "scope": 38648,
                "src": "1473:14:49",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38646,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1473:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ModuleConfig",
            "nameLocation": "1386:12:49",
            "scope": 38851,
            "visibility": "public"
          },
          {
            "id": 38651,
            "nodeType": "VariableDeclaration",
            "src": "1576:30:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38649,
              "nodeType": "StructuredDocumentation",
              "src": "1500:71:49",
              "text": " @notice Admin address that can configure the faucet."
            },
            "functionSelector": "2a0acc6a",
            "mutability": "immutable",
            "name": "ADMIN",
            "nameLocation": "1601:5:49",
            "scope": 38851,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38650,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1576:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38658,
            "nodeType": "VariableDeclaration",
            "src": "1703:57:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38652,
              "nodeType": "StructuredDocumentation",
              "src": "1613:85:49",
              "text": " @notice Mapping of authentication modules to their configurations."
            },
            "functionSelector": "a8ee49fe",
            "mutability": "mutable",
            "name": "modules",
            "nameLocation": "1753:7:49",
            "scope": 38851,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_struct$_ModuleConfig_$38648_storage_$",
              "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig)"
            },
            "typeName": {
              "id": 38657,
              "keyType": {
                "id": 38654,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 38653,
                  "name": "IFaucetAuthModule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38954,
                  "src": "1711:17:49"
                },
                "referencedDeclaration": 38954,
                "src": "1711:17:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                  "typeString": "contract IFaucetAuthModule"
                }
              },
              "nodeType": "Mapping",
              "src": "1703:42:49",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_struct$_ModuleConfig_$38648_storage_$",
                "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig)"
              },
              "valueType": {
                "id": 38656,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 38655,
                  "name": "ModuleConfig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38648,
                  "src": "1732:12:49"
                },
                "referencedDeclaration": 38648,
                "src": "1732:12:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ModuleConfig_$38648_storage_ptr",
                  "typeString": "struct Faucet.ModuleConfig"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 38666,
            "nodeType": "VariableDeclaration",
            "src": "1877:73:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38659,
              "nodeType": "StructuredDocumentation",
              "src": "1767:105:49",
              "text": " @notice Mapping of authentication IDs to the next timestamp at which they can be used."
            },
            "functionSelector": "38757bfd",
            "mutability": "mutable",
            "name": "timeouts",
            "nameLocation": "1942:8:49",
            "scope": 38851,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
              "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
            },
            "typeName": {
              "id": 38665,
              "keyType": {
                "id": 38661,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 38660,
                  "name": "IFaucetAuthModule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38954,
                  "src": "1885:17:49"
                },
                "referencedDeclaration": 38954,
                "src": "1885:17:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                  "typeString": "contract IFaucetAuthModule"
                }
              },
              "nodeType": "Mapping",
              "src": "1877:57:49",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
              },
              "valueType": {
                "id": 38664,
                "keyType": {
                  "id": 38662,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1914:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1906:27:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                  "typeString": "mapping(bytes32 => uint256)"
                },
                "valueType": {
                  "id": 38663,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1925:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 38673,
            "nodeType": "VariableDeclaration",
            "src": "2050:58:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38667,
              "nodeType": "StructuredDocumentation",
              "src": "1957:88:49",
              "text": " @notice Maps from id to nonces to whether or not they have been used."
            },
            "functionSelector": "1d5d26bc",
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "2102:6:49",
            "scope": 38851,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 38672,
              "keyType": {
                "id": 38668,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2058:7:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2050:44:49",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
              },
              "valueType": {
                "id": 38671,
                "keyType": {
                  "id": 38669,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2077:7:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2069:24:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueType": {
                  "id": 38670,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2088:4:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 38686,
            "nodeType": "ModifierDefinition",
            "src": "2196:127:49",
            "nodes": [],
            "body": {
              "id": 38685,
              "nodeType": "Block",
              "src": "2219:104:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 38677,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2237:3:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2237:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 38679,
                          "name": "ADMIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38651,
                          "src": "2251:5:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2237:19:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642062792061646d696e",
                        "id": 38681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2258:46:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11dc0a10cbbc1cc6b65f2557b3594efa38f24c7a8739675b3fb6ad92d74983c4",
                          "typeString": "literal_string \"Faucet: function can only be called by admin\""
                        },
                        "value": "Faucet: function can only be called by admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11dc0a10cbbc1cc6b65f2557b3594efa38f24c7a8739675b3fb6ad92d74983c4",
                          "typeString": "literal_string \"Faucet: function can only be called by admin\""
                        }
                      ],
                      "id": 38676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2229:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:76:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38683,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:76:49"
                },
                {
                  "id": 38684,
                  "nodeType": "PlaceholderStatement",
                  "src": "2315:1:49"
                }
              ]
            },
            "documentation": {
              "id": 38674,
              "nodeType": "StructuredDocumentation",
              "src": "2115:76:49",
              "text": " @notice Modifier that makes a function admin priviledged."
            },
            "name": "priviledged",
            "nameLocation": "2205:11:49",
            "parameters": {
              "id": 38675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:2:49"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38697,
            "nodeType": "FunctionDefinition",
            "src": "2411:59:49",
            "nodes": [],
            "body": {
              "id": 38696,
              "nodeType": "Block",
              "src": "2439:31:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38692,
                      "name": "ADMIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38651,
                      "src": "2449:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38693,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38689,
                      "src": "2457:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2449:14:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38695,
                  "nodeType": "ExpressionStatement",
                  "src": "2449:14:49"
                }
              ]
            },
            "documentation": {
              "id": 38687,
              "nodeType": "StructuredDocumentation",
              "src": "2329:77:49",
              "text": " @param _admin Admin address that can configure the faucet."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38689,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2431:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38697,
                  "src": "2423:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2423:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2422:16:49"
            },
            "returnParameters": {
              "id": 38691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:49"
            },
            "scope": 38851,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38702,
            "nodeType": "FunctionDefinition",
            "src": "2552:56:49",
            "nodes": [],
            "body": {
              "id": 38701,
              "nodeType": "Block",
              "src": "2579:29:49",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 38698,
              "nodeType": "StructuredDocumentation",
              "src": "2476:71:49",
              "text": " @notice Allows users to donate ETH to this contract."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2559:2:49"
            },
            "returnParameters": {
              "id": 38700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2579:0:49"
            },
            "scope": 38851,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38721,
            "nodeType": "FunctionDefinition",
            "src": "2802:141:49",
            "nodes": [],
            "body": {
              "id": 38720,
              "nodeType": "Block",
              "src": "2884:59:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38717,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38705,
                        "src": "2925:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 38714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2894:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$38614_$",
                          "typeString": "function (address payable) payable returns (contract SafeSend)"
                        },
                        "typeName": {
                          "id": 38713,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 38712,
                            "name": "SafeSend",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38614,
                            "src": "2898:8:49"
                          },
                          "referencedDeclaration": 38614,
                          "src": "2898:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafeSend_$38614",
                            "typeString": "contract SafeSend"
                          }
                        }
                      },
                      "id": 38716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 38715,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38707,
                          "src": "2915:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2894:30:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$38614_$value",
                        "typeString": "function (address payable) payable returns (contract SafeSend)"
                      }
                    },
                    "id": 38718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:42:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeSend_$38614",
                      "typeString": "contract SafeSend"
                    }
                  },
                  "id": 38719,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:42:49"
                }
              ]
            },
            "documentation": {
              "id": 38703,
              "nodeType": "StructuredDocumentation",
              "src": "2614:183:49",
              "text": " @notice Allows the admin to withdraw funds.\n @param _recipient Address to receive the funds.\n @param _amount    Amount of ETH in wei to withdraw."
            },
            "functionSelector": "f3fef3a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38710,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38709,
                  "name": "priviledged",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38686,
                  "src": "2872:11:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2872:11:49"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2811:8:49",
            "parameters": {
              "id": 38708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38705,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "2836:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38721,
                  "src": "2820:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 38704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:15:49",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38707,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2856:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38721,
                  "src": "2848:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2819:45:49"
            },
            "returnParameters": {
              "id": 38711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2884:0:49"
            },
            "scope": 38851,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38740,
            "nodeType": "FunctionDefinition",
            "src": "3160:137:49",
            "nodes": [],
            "body": {
              "id": 38739,
              "nodeType": "Block",
              "src": "3254:43:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 38733,
                        "name": "modules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38658,
                        "src": "3264:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_struct$_ModuleConfig_$38648_storage_$",
                          "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig storage ref)"
                        }
                      },
                      "id": 38735,
                      "indexExpression": {
                        "id": 38734,
                        "name": "_module",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38725,
                        "src": "3272:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                          "typeString": "contract IFaucetAuthModule"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3264:16:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ModuleConfig_$38648_storage",
                        "typeString": "struct Faucet.ModuleConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38736,
                      "name": "_config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38728,
                      "src": "3283:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                        "typeString": "struct Faucet.ModuleConfig memory"
                      }
                    },
                    "src": "3264:26:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ModuleConfig_$38648_storage",
                      "typeString": "struct Faucet.ModuleConfig storage ref"
                    }
                  },
                  "id": 38738,
                  "nodeType": "ExpressionStatement",
                  "src": "3264:26:49"
                }
              ]
            },
            "documentation": {
              "id": 38722,
              "nodeType": "StructuredDocumentation",
              "src": "2949:206:49",
              "text": " @notice Allows the admin to configure an authentication module.\n @param _module Authentication module to configure.\n @param _config Configuration to set for the module."
            },
            "functionSelector": "1cb81b88",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38731,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38730,
                  "name": "priviledged",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38686,
                  "src": "3242:11:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "3242:11:49"
              }
            ],
            "name": "configure",
            "nameLocation": "3169:9:49",
            "parameters": {
              "id": 38729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38725,
                  "mutability": "mutable",
                  "name": "_module",
                  "nameLocation": "3197:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38740,
                  "src": "3179:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                    "typeString": "contract IFaucetAuthModule"
                  },
                  "typeName": {
                    "id": 38724,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38723,
                      "name": "IFaucetAuthModule",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38954,
                      "src": "3179:17:49"
                    },
                    "referencedDeclaration": 38954,
                    "src": "3179:17:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                      "typeString": "contract IFaucetAuthModule"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38728,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "3226:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38740,
                  "src": "3206:27:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                    "typeString": "struct Faucet.ModuleConfig"
                  },
                  "typeName": {
                    "id": 38727,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38726,
                      "name": "ModuleConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38648,
                      "src": "3206:12:49"
                    },
                    "referencedDeclaration": 38648,
                    "src": "3206:12:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ModuleConfig_$38648_storage_ptr",
                      "typeString": "struct Faucet.ModuleConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3178:56:49"
            },
            "returnParameters": {
              "id": 38732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3254:0:49"
            },
            "scope": 38851,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38850,
            "nodeType": "FunctionDefinition",
            "src": "3463:1600:49",
            "nodes": [],
            "body": {
              "id": 38849,
              "nodeType": "Block",
              "src": "3544:1519:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38752,
                      "mutability": "mutable",
                      "name": "config",
                      "nameLocation": "3614:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 38849,
                      "src": "3594:26:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                        "typeString": "struct Faucet.ModuleConfig"
                      },
                      "typeName": {
                        "id": 38751,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 38750,
                          "name": "ModuleConfig",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38648,
                          "src": "3594:12:49"
                        },
                        "referencedDeclaration": 38648,
                        "src": "3594:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ModuleConfig_$38648_storage_ptr",
                          "typeString": "struct Faucet.ModuleConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38757,
                  "initialValue": {
                    "baseExpression": {
                      "id": 38753,
                      "name": "modules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38658,
                      "src": "3623:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_struct$_ModuleConfig_$38648_storage_$",
                        "typeString": "mapping(contract IFaucetAuthModule => struct Faucet.ModuleConfig storage ref)"
                      }
                    },
                    "id": 38756,
                    "indexExpression": {
                      "expression": {
                        "id": 38754,
                        "name": "_auth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38747,
                        "src": "3631:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                          "typeString": "struct Faucet.AuthParameters memory"
                        }
                      },
                      "id": 38755,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "module",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38634,
                      "src": "3631:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                        "typeString": "contract IFaucetAuthModule"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3623:21:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ModuleConfig_$38648_storage",
                      "typeString": "struct Faucet.ModuleConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3594:50:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38759,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38752,
                          "src": "3725:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 38760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "enabled",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38643,
                        "src": "3725:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a2070726f76696465642061757468206d6f64756c65206973206e6f7420737570706f72746564206279207468697320666175636574",
                        "id": 38761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3741:62:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a487bd17616eecf27b0cfc5721c4a6f239e71d3a78775f3783bebb377904f494",
                          "typeString": "literal_string \"Faucet: provided auth module is not supported by this faucet\""
                        },
                        "value": "Faucet: provided auth module is not supported by this faucet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a487bd17616eecf27b0cfc5721c4a6f239e71d3a78775f3783bebb377904f494",
                          "typeString": "literal_string \"Faucet: provided auth module is not supported by this faucet\""
                        }
                      ],
                      "id": 38758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3717:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:87:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38763,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:87:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 38773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 38765,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38673,
                              "src": "4119:6:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
                              }
                            },
                            "id": 38768,
                            "indexExpression": {
                              "expression": {
                                "id": 38766,
                                "name": "_auth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38747,
                                "src": "4126:5:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                                  "typeString": "struct Faucet.AuthParameters memory"
                                }
                              },
                              "id": 38767,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38636,
                              "src": "4126:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4119:16:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 38771,
                          "indexExpression": {
                            "expression": {
                              "id": 38769,
                              "name": "_params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38744,
                              "src": "4136:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripParameters_$38631_memory_ptr",
                                "typeString": "struct Faucet.DripParameters memory"
                              }
                            },
                            "id": 38770,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38630,
                            "src": "4136:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4119:31:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 38772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:5:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4119:40:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a206e6f6e63652068617320616c7265616479206265656e2075736564",
                        "id": 38774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4161:37:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38a35c84541827923eff9aa90f61202cb382140ced78b1ed52388919b57b3f37",
                          "typeString": "literal_string \"Faucet: nonce has already been used\""
                        },
                        "value": "Faucet: nonce has already been used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38a35c84541827923eff9aa90f61202cb382140ced78b1ed52388919b57b3f37",
                          "typeString": "literal_string \"Faucet: nonce has already been used\""
                        }
                      ],
                      "id": 38764,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4111:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4111:88:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38776,
                  "nodeType": "ExpressionStatement",
                  "src": "4111:88:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 38778,
                              "name": "timeouts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38666,
                              "src": "4277:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
                              }
                            },
                            "id": 38781,
                            "indexExpression": {
                              "expression": {
                                "id": 38779,
                                "name": "_auth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38747,
                                "src": "4286:5:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                                  "typeString": "struct Faucet.AuthParameters memory"
                                }
                              },
                              "id": 38780,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "module",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38634,
                              "src": "4286:12:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                                "typeString": "contract IFaucetAuthModule"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4277:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 38784,
                          "indexExpression": {
                            "expression": {
                              "id": 38782,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38747,
                              "src": "4300:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 38783,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38636,
                            "src": "4300:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4277:32:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 38785,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4312:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 38786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4312:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4277:50:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a20617574682063616e6e6f7420626520757365642079657420626563617573652074696d656f757420686173206e6f7420656c6170736564",
                        "id": 38788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4341:65:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f21b1e0d72b431af603cc6414de35a527238124b8e3e145303b8ecafae0064cb",
                          "typeString": "literal_string \"Faucet: auth cannot be used yet because timeout has not elapsed\""
                        },
                        "value": "Faucet: auth cannot be used yet because timeout has not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f21b1e0d72b431af603cc6414de35a527238124b8e3e145303b8ecafae0064cb",
                          "typeString": "literal_string \"Faucet: auth cannot be used yet because timeout has not elapsed\""
                        }
                      ],
                      "id": 38777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4256:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4256:160:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38790,
                  "nodeType": "ExpressionStatement",
                  "src": "4256:160:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38795,
                            "name": "_params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38744,
                            "src": "4497:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripParameters_$38631_memory_ptr",
                              "typeString": "struct Faucet.DripParameters memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 38796,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38747,
                              "src": "4506:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 38797,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38636,
                            "src": "4506:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 38798,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38747,
                              "src": "4516:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 38799,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38638,
                            "src": "4516:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_DripParameters_$38631_memory_ptr",
                              "typeString": "struct Faucet.DripParameters memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 38792,
                              "name": "_auth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38747,
                              "src": "4477:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                                "typeString": "struct Faucet.AuthParameters memory"
                              }
                            },
                            "id": 38793,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "module",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38634,
                            "src": "4477:12:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                              "typeString": "contract IFaucetAuthModule"
                            }
                          },
                          "id": 38794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38953,
                          "src": "4477:19:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_DripParameters_$38631_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Faucet.DripParameters memory,bytes32,bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 38800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4477:51:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365743a206472697020706172616d657465727320636f756c64206e6f74206265207665726966696564206279207365637572697479206d6f64756c65",
                        "id": 38801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:66:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bbdb926f863761ec12b934a9f8a495456fde72dcb6f7b3711891b4ba4651e91",
                          "typeString": "literal_string \"Faucet: drip parameters could not be verified by security module\""
                        },
                        "value": "Faucet: drip parameters could not be verified by security module"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bbdb926f863761ec12b934a9f8a495456fde72dcb6f7b3711891b4ba4651e91",
                          "typeString": "literal_string \"Faucet: drip parameters could not be verified by security module\""
                        }
                      ],
                      "id": 38791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4456:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4456:162:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38803,
                  "nodeType": "ExpressionStatement",
                  "src": "4456:162:49"
                },
                {
                  "expression": {
                    "id": 38816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 38804,
                          "name": "timeouts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38666,
                          "src": "4698:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IFaucetAuthModule_$38954_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(contract IFaucetAuthModule => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 38809,
                        "indexExpression": {
                          "expression": {
                            "id": 38805,
                            "name": "_auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38747,
                            "src": "4707:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                              "typeString": "struct Faucet.AuthParameters memory"
                            }
                          },
                          "id": 38806,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "module",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38634,
                          "src": "4707:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFaucetAuthModule_$38954",
                            "typeString": "contract IFaucetAuthModule"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4698:22:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 38810,
                      "indexExpression": {
                        "expression": {
                          "id": 38807,
                          "name": "_auth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38747,
                          "src": "4721:5:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                            "typeString": "struct Faucet.AuthParameters memory"
                          }
                        },
                        "id": 38808,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38636,
                        "src": "4721:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4698:32:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 38815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 38811,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4733:5:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 38812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4733:15:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 38813,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38752,
                          "src": "4751:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 38814,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ttl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38645,
                        "src": "4751:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4733:28:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4698:63:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38817,
                  "nodeType": "ExpressionStatement",
                  "src": "4698:63:49"
                },
                {
                  "expression": {
                    "id": 38826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 38818,
                          "name": "nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38673,
                          "src": "4807:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 38823,
                        "indexExpression": {
                          "expression": {
                            "id": 38819,
                            "name": "_auth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38747,
                            "src": "4814:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                              "typeString": "struct Faucet.AuthParameters memory"
                            }
                          },
                          "id": 38820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38636,
                          "src": "4814:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4807:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 38824,
                      "indexExpression": {
                        "expression": {
                          "id": 38821,
                          "name": "_params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38744,
                          "src": "4824:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripParameters_$38631_memory_ptr",
                            "typeString": "struct Faucet.DripParameters memory"
                          }
                        },
                        "id": 38822,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38630,
                        "src": "4824:13:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4807:31:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 38825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4841:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4807:38:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38827,
                  "nodeType": "ExpressionStatement",
                  "src": "4807:38:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38834,
                          "name": "_params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38744,
                          "src": "4961:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripParameters_$38631_memory_ptr",
                            "typeString": "struct Faucet.DripParameters memory"
                          }
                        },
                        "id": 38835,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38628,
                        "src": "4961:17:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 38830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4924:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$38614_$",
                          "typeString": "function (address payable) payable returns (contract SafeSend)"
                        },
                        "typeName": {
                          "id": 38829,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 38828,
                            "name": "SafeSend",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38614,
                            "src": "4928:8:49"
                          },
                          "referencedDeclaration": 38614,
                          "src": "4928:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafeSend_$38614",
                            "typeString": "contract SafeSend"
                          }
                        }
                      },
                      "id": 38833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 38831,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38752,
                            "src": "4945:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                              "typeString": "struct Faucet.ModuleConfig memory"
                            }
                          },
                          "id": 38832,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38647,
                          "src": "4945:13:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4924:36:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_SafeSend_$38614_$value",
                        "typeString": "function (address payable) payable returns (contract SafeSend)"
                      }
                    },
                    "id": 38836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4924:55:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeSend_$38614",
                      "typeString": "contract SafeSend"
                    }
                  },
                  "id": 38837,
                  "nodeType": "ExpressionStatement",
                  "src": "4924:55:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38839,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38752,
                          "src": "5000:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 38840,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38641,
                        "src": "5000:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 38841,
                          "name": "_auth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38747,
                          "src": "5013:5:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                            "typeString": "struct Faucet.AuthParameters memory"
                          }
                        },
                        "id": 38842,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38636,
                        "src": "5013:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 38843,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38752,
                          "src": "5023:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ModuleConfig_$38648_memory_ptr",
                            "typeString": "struct Faucet.ModuleConfig memory"
                          }
                        },
                        "id": 38844,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38647,
                        "src": "5023:13:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 38845,
                          "name": "_params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38744,
                          "src": "5038:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripParameters_$38631_memory_ptr",
                            "typeString": "struct Faucet.DripParameters memory"
                          }
                        },
                        "id": 38846,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38628,
                        "src": "5038:17:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 38838,
                      "name": "Drip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38626,
                      "src": "4995:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (string memory,bytes32,uint256,address)"
                      }
                    },
                    "id": 38847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4995:61:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38848,
                  "nodeType": "EmitStatement",
                  "src": "4990:66:49"
                }
              ]
            },
            "documentation": {
              "id": 38741,
              "nodeType": "StructuredDocumentation",
              "src": "3303:155:49",
              "text": " @notice Drips ETH to a recipient account.\n @param _params Drip parameters.\n @param _auth   Authentication parameters."
            },
            "functionSelector": "b960bc2b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nameLocation": "3472:4:49",
            "parameters": {
              "id": 38748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38744,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "3499:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38850,
                  "src": "3477:29:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripParameters_$38631_memory_ptr",
                    "typeString": "struct Faucet.DripParameters"
                  },
                  "typeName": {
                    "id": 38743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38742,
                      "name": "DripParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38631,
                      "src": "3477:14:49"
                    },
                    "referencedDeclaration": 38631,
                    "src": "3477:14:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripParameters_$38631_storage_ptr",
                      "typeString": "struct Faucet.DripParameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38747,
                  "mutability": "mutable",
                  "name": "_auth",
                  "nameLocation": "3530:5:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 38850,
                  "src": "3508:27:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AuthParameters_$38639_memory_ptr",
                    "typeString": "struct Faucet.AuthParameters"
                  },
                  "typeName": {
                    "id": 38746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38745,
                      "name": "AuthParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38639,
                      "src": "3508:14:49"
                    },
                    "referencedDeclaration": 38639,
                    "src": "3508:14:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AuthParameters_$38639_storage_ptr",
                      "typeString": "struct Faucet.AuthParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3476:60:49"
            },
            "returnParameters": {
              "id": 38749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3544:0:49"
            },
            "scope": 38851,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Faucet",
        "contractDependencies": [
          38614
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 38615,
          "nodeType": "StructuredDocumentation",
          "src": "414:77:49",
          "text": " @title  Faucet\n @notice Faucet contract that drips ETH to users."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38851
        ],
        "name": "Faucet",
        "nameLocation": "501:6:49",
        "scope": 38852,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 49
}